[{"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/index.js":"1","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/App.js":"2","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Landing.js":"3","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/components/layout/Navbar/Navbar.js":"4","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/components/common/YoutubeBlock.js":"5","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Dashboard.js":"6","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Detail.js":"7","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Auth.js":"8","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Qr.js":"9","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Success.js":"10"},{"size":197,"mtime":1610832320363,"results":"11","hashOfConfig":"12"},{"size":1028,"mtime":1610938855481,"results":"13","hashOfConfig":"12"},{"size":12546,"mtime":1610942575051,"results":"14","hashOfConfig":"12"},{"size":690,"mtime":1610933710031,"results":"15","hashOfConfig":"12"},{"size":752,"mtime":1610844820151,"results":"16","hashOfConfig":"12"},{"size":14812,"mtime":1610942790210,"results":"17","hashOfConfig":"12"},{"size":13702,"mtime":1610942548308,"results":"18","hashOfConfig":"12"},{"size":8992,"mtime":1610938399765,"results":"19","hashOfConfig":"12"},{"size":2998,"mtime":1610942435258,"results":"20","hashOfConfig":"12"},{"size":1001,"mtime":1610939447900,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dp5s1w",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"24"},"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/index.js",[],["52","53"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/App.js",["54","55","56","57"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\n// CSS - controlled by /scss\nimport './css/main.css';\n\n// Layout\nimport Navbar from './components/layout/Navbar/Navbar';\nimport Landing from './pages/Landing';\nimport Dashboard from './pages/Dashboard';\nimport Detail from './pages/Detail';\nimport Auth from './pages/Auth';\nimport QrPage from './pages/Qr';\nimport Success from './pages/Success';\n\nconst App = () => {\n\n  return (\n    <Router>\n    <div>\n      <Navbar />\n      <Switch>\n        {/* Landing Pages */}\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/detail\" component={Detail} />\n        <Route exact path=\"/checkin\" component={Auth} />\n        <Route exact path=\"/complete\" component={QrPage} />\n        <Route exact path=\"/success\" component={Success} />\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Landing.js",["58","59","60","61"],"import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types';\n\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\nconst Landing = props => {\n    return (\n        <Fragment>\n            <div className=\"page-left\">\n                <div className=\"group\">\n                    <div className=\"text\">\n                        <h2 className=\"slogan\">\n\t\t\t\t            üîñ Make a QR Code Menu for FREE\n                        </h2>\n                        <p className=\"intro\">\n\t\t\t\t            ü§≥ Let your customers scan a QR code and {' '}\n                            <a target=\"_blank\" href=\"/\">see your menu</a>\n                            {' '}with their phone\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            ‚ú® Update your menu whenever you want without having to print them again\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            ü¶† Reduce the spread of the Coronavirus by removing physical menus\n                        </p>\n                        <p className=\"intro\"> \n\t\t\t\t            üçù <a href=\"/\">Hundreds of restaurants, cafes and bars</a>\n                            {' '}already use QR Menu Creator\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            üìà See live analytics for your menu like how many times it's scanned when (\n                            <a href=\"/\">see demo</a>)\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            üí∏ It's completely free, made by{' '}\n                            <a target=\"_blank\" href=\"/\">@essoterik</a>\n                            {/* (founder of <a target=\"_blank\" href=\"/\">Nomad List</a>) */}\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            üì± Scan the QR code on the üëâ right (or below) with your phone's camera app to live preview your edits\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            ‚úçÔ∏è You can start by editing the example menu below. You can use \n                            {' '}<a target=\"_blank\" href=\"/\">Markdown styling</a>\n                            {' '}or the styling bar above the text box; your edits are auto-saved and go live immediately\n                        </p>\n                    </div>\n                </div>\n                <div className=\"group settings\">\n                    <div className=\"heading\">\n                        Customize Settings\n                    </div>\n                    <p>\n                        You can change these settings at any time later in account admin page after you have created your QR code.\n                    </p>\n\n                    <div>\n                        üíå QR Code Name:{' '}\n                        <input type=\"text\" className=\"email\" value=\"My QR Code\" style={{display:'inline-block', width:'200px'}} />\n                    </div> \n                    \n                </div>\n                <div className=\"group design\">\n                    <div className=\"heading\">\n                        Design your menu\n                    </div>\n                    <div className=\"left\">\n                        üÖ∞ Heading font:{' '}\n                        <select className=\"heading_font\">\n                            <option selected>Open Sans</option>\n                            <option>Indie Flower</option>\n                            <option>Parisienne</option>\n                            <option>Press Start 2P</option>\n                            <option>Flavors</option>\n                            <option>Fredericka the Great</option>\n                            <option>Oleo Script Swash Caps</option>\n                            <option>Nosifer</option>\n                            <option>Eater</option>\n                            <option>Abril Fatface</option>\n                            <option>Anton</option>\n                            <option>Arvo</option>\n                            <option>Cabin</option>\n                            <option>Cormorant</option>\n                            <option>Dokdo</option>\n                            <option>Dosis</option>\n                            <option>Lato</option>\n                            <option>Lobster</option>\n                            <option>Monda</option>\n                            <option>Montserrat</option>\n                            <option>Nunito</option>\n                            <option>Noto Sans</option>\n                            <option>Old Standard TT</option>\n                            <option>Open Sans</option>\n                            <option>Oswald</option>\n                            <option>Pacifico</option>\n                            <option>Poiret One</option>\n                            <option>Poppins</option>\n                            <option>Prata</option>\n                            <option>PT Serif</option>\n                            <option>Raleway</option>\n                            <option>Righteous</option>\n                            <option>Roboto Slab</option>\n                            <option>Source Sans Pro</option>\n                            <option>Ubuntu</option>\n                            <option>Yatra One</option>\n                            <option>Pontano Sans</option>\n                        </select>\n\n                        <br />\n                        \n\t\t\t            üÖ∞ Heading color:{' '}\n                        <input type=\"color\" className=\"heading_color\" value=\"#000000\" />\n\n                        <br />\n\n\t\t\t            üåà Background color:{' '}\n                        <input type=\"color\" className=\"background_color\" value=\"#f9f9f9\" />\n\n                        <br />\n\n\t\t\t            üÖæ Text alignment:{' '}\n                        <select className=\"alignment\">\n                            <option value=\"left\" selected>Left</option>\n                            <option value=\"center\">Center</option>\n                            <option value=\"right\">Right</option>\n                        </select>\n\n                        <br />\n                    </div>\n                    <div className=\"right\">\n                        üÖø Text font:{' '}\n                        <select className=\"text_font\">\n                            <option selected>Open Sans</option>\n                            <option>Indie Flower</option>\n                            <option>Parisienne</option>\n                            <option>Press Start 2P</option>\n                            <option>Flavors</option>\n                            <option>Fredericka the Great</option>\n                            <option>Oleo Script Swash Caps</option>\n                            <option>Nosifer</option>\n                            <option>Eater</option>\n                            <option>Abril Fatface</option>\n                            <option>Anton</option>\n                            <option>Arvo</option>\n                            <option>Cabin</option>\n                            <option>Cormorant</option>\n                            <option>Dokdo</option>\n                            <option>Dosis</option>\n                            <option>Lato</option>\n                            <option>Lobster</option>\n                            <option>Monda</option>\n                            <option>Montserrat</option>\n                            <option>Nunito</option>\n                            <option>Noto Sans</option>\n                            <option>Old Standard TT</option>\n                            <option>Open Sans</option>\n                            <option>Oswald</option>\n                            <option>Pacifico</option>\n                            <option>Poiret One</option>\n                            <option>Poppins</option>\n                            <option>Prata</option>\n                            <option>PT Serif</option>\n                            <option>Raleway</option>\n                            <option>Righteous</option>\n                            <option>Roboto Slab</option>\n                            <option>Source Sans Pro</option>\n                            <option>Ubuntu</option>\n                            <option>Yatra One</option>\n                            <option>Pontano Sans</option>\n                        </select>\n\n                        <br />\n                        \n\t\t\t            üÖ∞ Text color:{' '}\n                        <input type=\"color\" className=\"text_color\" value=\"#808080\" />\n\n                        <br />\n\n\t\t\t            üåì Tone:{' '}\n                        <select className=\"tone\">\n                            <option value=\"light\" selected>Light</option>\n                            <option value=\"dark\">Dark</option>\n                        </select>\n\n                        <br />\n\n\t\t\t            üñº Background image:{' '}\n                        <input type=\"file\" accept=\".jpg,.jpeg,.png\" className=\"background_image\" />\n\n                        <br />\n\n                        üÖ∞ QR color:{' '}\n                        <input type=\"color\" className=\"qr_color\" value=\"#000000\" />\n\n                        <br />\n                    </div>\n                </div>\n                \n                <div className=\"group chart\">\n                    {/* <button className=\"qr-campaign-charts__date\">\n                        <span className=\"icon-qr-calendar\">\n                            <i class=\"fas fa-calendar-alt\"></i>\n                        </span>\n                        Dec 18, 2020 - Jan 17, 2021\n                        <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                            <i class=\"fas fa-chevron-down\"></i>\n                        </span>\n                    </button>\n                    <button className=\"qr-campaign-charts__groupBy\">\n                        Month\n                        <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                            <i class=\"fas fa-chevron-down\"></i>\n                        </span>\n                    </button> */}\n                    <button className=\"qr-campaign-charts__download\">\n                        <span className=\"icon-qr-calendar\">\n                            <i class=\"fas fa-cog\"></i>\n                        </span>\n                        Options\n                        <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                            <i class=\"fas fa-chevron-down\"></i>\n                        </span>\n                    </button>\n\n                    <div className=\"no-rides\">\n                        {/* <div className=\"rocket\">\n                            <img src={frownPNG} />\n                        </div> */}\n                        <h1>Scan your QR Code to view <br/> attendee list . . .</h1>\n                        <h2>No attendees to display yet.</h2>\n                    </div>\n                    \n                </div>\n\n            </div>\n            <div className=\"page-right\">\n                <div className=\"qr-img-container\">\n                    <img className=\"qr-img\" src={qrPNG} />\n                </div>\n                \n                {/* <div style={{display:'flex', justifyContent:'center'}}>\n                    <YoutubeBlock videoId='_nBlN9yp9R8' />\n                </div> */}\n\n                <div className=\"divider\"></div>\n                <p>\n\t\t            Scan this QR code with your phone's camera app to see your QR code in action (or click it):\n                </p>\n                <a href=\"/\" className=\"qr_code_link action-save-changes\" target=\"_blank\">\n                    {/* <div className=\"qr_code\">\n                        <img className=\"qr_code_logo\" src=\"https://qrmenucreator.com/assets/11.png?2\" />\n                        <canvas width=\"1000\" height=\"1000\" style={{display:'none'}} />\n                        <img style={{display: 'block'}} src=\"https://lh3.googleusercontent.com/proxy/WfUMWqfw-3Mb2w9wPBhvFme--pGZJsjKPRsLxtSyMnqdckRlaNqAVZauN5att8-i9fsSYbonKzltSadFBO-EwPS9ZDREQTQ5wmj-xZqLg-ka0PcQun6xU_4e\" />\n                    </div> */}\n                </a>\n            </div>\n            <div className=\"button-container\">\n                <a href=\"/complete\" className=\"button\">\n                    Create QR Code\n                </a>\n            </div>\n        </Fragment>\n    )\n}\n\nLanding.propTypes = {\n\n}\n\nexport default Landing\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/components/layout/Navbar/Navbar.js",["62","63","64"],"import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport qrLogo from '../../../utils/imgs/project_logo.png'\n\nconst Navbar = props => {\n    return (\n        <div className=\"nav-bar\">\n            <div className=\"logo\">\n                <img className=\"emoji\" src={qrLogo} />\n            </div>\n            <a href=\"/\" style={{marginLeft:'10px'}}>\n                <h1 className=\"name\">\n\t\t\t        Project QR\n                </h1>\n            </a>\n            <a href=\"/\" className=\"button\" style={{color:'#fff'}} target=\"_blank\">\n\t\t\t    Create QR Code\n            </a>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n\n}\n\nexport default Navbar\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/components/common/YoutubeBlock.js",["65"],"import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport YouTube from 'react-youtube';\n\n\nfunction YoutubeBlock(props) {\n        const opts = {\n          height: '169',\n          width: '300',\n          playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n          },\n        };\n\n        const videoOnReady = (event) => {\n            // access to player in all event handlers via event.target\n            event.target.pauseVideo();\n            console.log(event.target);\n        }\n        const {videoId} = props;\n        return (\n            <YouTube videoId={videoId} opts={opts} onReady={videoOnReady} />\n        );\n}\n\nYoutubeBlock.propTypes = {\n\n}\n\nexport default YoutubeBlock\n\n",["66","67"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Dashboard.js",["68","69","70","71","72","73","74","75"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Detail.js",["76","77","78","79","80"],"import React, { useEffect, useState, Fragment } from 'react'\nimport PropTypes from 'prop-types';\n\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\nconst Detail = props => {\n    // Nav underline Table\n    const [tableShow1, setTableShow1] = useState('details');\n\n    return (\n        <Fragment>\n            <div className=\"page-left detail\">\n                <ul class=\"nav-underline store side profile\">\n                    <div onClick={e => setTableShow1('details')} className={tableShow1 === \"details\" && \"active\"}><li><i class=\"fas fa-list\"></i><p>Details</p></li></div>\n                    <div onClick={e => setTableShow1('settings')} className={tableShow1 === \"settings\" && \"active\"}><li><i class=\"fas fa-cog\"></i><p>Settings</p></li></div>\n                </ul>\n                <div className=\"profile-settings-transition\">\n                    <div className={tableShow1 === 'details' ? \"profile-settings-container active\" : \"profile-settings-container\"} id=\"transition-3\">\n                        <div className=\"group chart\">\n                            {/* <button className=\"qr-campaign-charts__date\">\n                                <span className=\"icon-qr-calendar\">\n                                    <i class=\"fas fa-calendar-alt\"></i>\n                                </span>\n                                Dec 18, 2020 - Jan 17, 2021\n                                <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                                    <i class=\"fas fa-chevron-down\"></i>\n                                </span>\n                            </button>\n                            <button className=\"qr-campaign-charts__groupBy\">\n                                Month\n                                <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                                    <i class=\"fas fa-chevron-down\"></i>\n                                </span>\n                            </button> */}\n                            <button className=\"qr-campaign-charts__download\">\n                                <span className=\"icon-qr-calendar\">\n                                    <i class=\"fas fa-cog\"></i>\n                                </span>\n                                Options\n                                <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                                    <i class=\"fas fa-chevron-down\"></i>\n                                </span>\n                            </button>\n\n                            {/* <div className=\"no-rides\">\n                                <h1>No attendees to display yet</h1>\n                                <h2>Scan your QR Code to view attendee list.</h2>\n                            </div> */}\n                            <div className=\"list\">\n                                <div className=\"row\">\n                                    <div className=\"cell name\">Emma L.</div>\n                                    <div className=\"cell date\">Today at 2:26 AM</div>\n                                    <div className=\"cell price\">$13.15</div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"cell name\">Emma L.</div>\n                                    <div className=\"cell date\">Today at 2:26 AM</div>\n                                    <div className=\"cell price\">$13.15</div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"cell name\">Emma L.</div>\n                                    <div className=\"cell date\">Today at 2:26 AM</div>\n                                    <div className=\"cell price\">$13.15</div>\n                                </div>\n                            </div>\n                        \n                        </div>\n                    </div>\n                    <div className={tableShow1 === 'settings' ? \"profile-settings-container active\" : \"profile-settings-container\"} id=\"transition-4\">\n                    <div className=\"group settings\">\n                            <div className=\"heading\">\n                                Customize Settings\n                            </div>\n                            <p>\n                                You can change these settings at any time later in account admin page after you have created your QR code.\n                            </p>\n\n                            <div className=\"input-container\">\n                                üíå QR Code Name:{' '}\n                                <input type=\"text\" className=\"email\" value=\"My QR Code\" style={{display:'inline-block', width:'200px'}} />\n                            </div> \n                            \n                        </div>\n                        <div className=\"group design\">\n                            <div className=\"heading\">\n                                Design your menu\n                            </div>\n                            <div className=\"left\">\n                                üÖ∞ Heading font:{' '}\n                                <select className=\"heading_font\">\n                                    <option selected>Open Sans</option>\n                                    <option>Indie Flower</option>\n                                    <option>Parisienne</option>\n                                    <option>Press Start 2P</option>\n                                    <option>Flavors</option>\n                                    <option>Fredericka the Great</option>\n                                    <option>Oleo Script Swash Caps</option>\n                                    <option>Nosifer</option>\n                                    <option>Eater</option>\n                                    <option>Abril Fatface</option>\n                                    <option>Anton</option>\n                                    <option>Arvo</option>\n                                    <option>Cabin</option>\n                                    <option>Cormorant</option>\n                                    <option>Dokdo</option>\n                                    <option>Dosis</option>\n                                    <option>Lato</option>\n                                    <option>Lobster</option>\n                                    <option>Monda</option>\n                                    <option>Montserrat</option>\n                                    <option>Nunito</option>\n                                    <option>Noto Sans</option>\n                                    <option>Old Standard TT</option>\n                                    <option>Open Sans</option>\n                                    <option>Oswald</option>\n                                    <option>Pacifico</option>\n                                    <option>Poiret One</option>\n                                    <option>Poppins</option>\n                                    <option>Prata</option>\n                                    <option>PT Serif</option>\n                                    <option>Raleway</option>\n                                    <option>Righteous</option>\n                                    <option>Roboto Slab</option>\n                                    <option>Source Sans Pro</option>\n                                    <option>Ubuntu</option>\n                                    <option>Yatra One</option>\n                                    <option>Pontano Sans</option>\n                                </select>\n\n                                <br />\n                                \n                                üÖ∞ Heading color:{' '}\n                                <input type=\"color\" className=\"heading_color\" value=\"#000000\" />\n\n                                <br />\n\n                                üåà Background color:{' '}\n                                <input type=\"color\" className=\"background_color\" value=\"#f9f9f9\" />\n\n                                <br />\n\n                                üÖæ Text alignment:{' '}\n                                <select className=\"alignment\">\n                                    <option value=\"left\" selected>Left</option>\n                                    <option value=\"center\">Center</option>\n                                    <option value=\"right\">Right</option>\n                                </select>\n\n                                <br />\n                            </div>\n                            <div className=\"right\">\n                                üÖø Text font:{' '}\n                                <select className=\"text_font\">\n                                    <option selected>Open Sans</option>\n                                    <option>Indie Flower</option>\n                                    <option>Parisienne</option>\n                                    <option>Press Start 2P</option>\n                                    <option>Flavors</option>\n                                    <option>Fredericka the Great</option>\n                                    <option>Oleo Script Swash Caps</option>\n                                    <option>Nosifer</option>\n                                    <option>Eater</option>\n                                    <option>Abril Fatface</option>\n                                    <option>Anton</option>\n                                    <option>Arvo</option>\n                                    <option>Cabin</option>\n                                    <option>Cormorant</option>\n                                    <option>Dokdo</option>\n                                    <option>Dosis</option>\n                                    <option>Lato</option>\n                                    <option>Lobster</option>\n                                    <option>Monda</option>\n                                    <option>Montserrat</option>\n                                    <option>Nunito</option>\n                                    <option>Noto Sans</option>\n                                    <option>Old Standard TT</option>\n                                    <option>Open Sans</option>\n                                    <option>Oswald</option>\n                                    <option>Pacifico</option>\n                                    <option>Poiret One</option>\n                                    <option>Poppins</option>\n                                    <option>Prata</option>\n                                    <option>PT Serif</option>\n                                    <option>Raleway</option>\n                                    <option>Righteous</option>\n                                    <option>Roboto Slab</option>\n                                    <option>Source Sans Pro</option>\n                                    <option>Ubuntu</option>\n                                    <option>Yatra One</option>\n                                    <option>Pontano Sans</option>\n                                </select>\n\n                                <br />\n                                \n                                üÖ∞ Text color:{' '}\n                                <input type=\"color\" className=\"text_color\" value=\"#808080\" />\n\n                                <br />\n\n                                üåì Tone:{' '}\n                                <select className=\"tone\">\n                                    <option value=\"light\" selected>Light</option>\n                                    <option value=\"dark\">Dark</option>\n                                </select>\n\n                                <br />\n\n                                üñº Background image:{' '}\n                                <input type=\"file\" accept=\".jpg,.jpeg,.png\" className=\"background_image\" />\n\n                                <br />\n\n                                üÖ∞ QR color:{' '}\n                                <input type=\"color\" className=\"qr_color\" value=\"#000000\" />\n\n                                <br />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"page-right\">\n                <div className=\"qr-img-container\">\n                    <img className=\"qr-img\" src={qrPNG} />\n                </div>\n                \n                {/* <div style={{display:'flex', justifyContent:'center'}}>\n                    <YoutubeBlock videoId='_nBlN9yp9R8' />\n                </div> */}\n\n                <div className=\"divider\"></div>\n                <p>\n\t\t            Scan this QR code with your phone's camera app to see your QR code in action (or click it):\n                </p>\n                <a href=\"/\" className=\"qr_code_link action-save-changes\" target=\"_blank\">\n                    {/* <div className=\"qr_code\">\n                        <img className=\"qr_code_logo\" src=\"https://qrmenucreator.com/assets/11.png?2\" />\n                        <canvas width=\"1000\" height=\"1000\" style={{display:'none'}} />\n                        <img style={{display: 'block'}} src=\"https://lh3.googleusercontent.com/proxy/WfUMWqfw-3Mb2w9wPBhvFme--pGZJsjKPRsLxtSyMnqdckRlaNqAVZauN5att8-i9fsSYbonKzltSadFBO-EwPS9ZDREQTQ5wmj-xZqLg-ka0PcQun6xU_4e\" />\n                    </div> */}\n                </a>\n            </div>\n            <div className=\"button-container\">\n                <a href=\"/success\" className=\"button\">\n                    Print QR Code\n                </a>\n            </div>\n        </Fragment>\n    )\n}\n\nDetail.propTypes = {\n\n}\n\nexport default Detail\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Auth.js",["81","82","83","84","85"],"import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nconst initialState = {\n    name: '',\n    phone: '',\n    gender: '',\n};\n\nconst Auth = ({ \n    history \n}) => {\n    const [formData, setFormData] = useState(initialState);\n\n    const [packageDeliv, setPackageDeliv] = useState(false);\n    const [pickupDeliv, setPickupDeliv] = useState(false);\n    const [shopping, setShopping] = useState(false);\n    const [sorting, setSorting] = useState(false);\n\n    const [roles, setRoles] = useState([]);\n\n    const onAddRole = (value) => {\n        setRoles([...roles, value]);\n        // filterItems(value);\n    }\n\n    const onDeleteRole = (value) => {\n        let remainingTags = roles.filter ((r) => {\n        return (r !== value);\n        });\n        setRoles([...remainingTags]);\n        // unFilterItems(value);\n    }\n\n    const handleJobType = (value) => {\n        console.log('ROLES:')\n        console.log(value);\n        console.log(roles);\n        if(value === 'delivery' && !packageDeliv) {\n            setPackageDeliv(true);\n\n            onAddRole(value);\n        } else if (value === 'pickup' && !pickupDeliv) {\n            setPickupDeliv(true);\n\n            onAddRole(value);\n        } else if (value === 'shopping' && !shopping) {\n            setShopping(true);\n\n            onAddRole(value);\n        } else if (value === 'sorting' && !sorting) {\n            setSorting(true);\n\n            onAddRole(value);\n        } else {\n            onDeleteRole(value);\n\n            if(value === 'delivery') {\n                setPackageDeliv(false);\n            } else if (value === 'pickup') {\n                setPickupDeliv(false);\n            } else if (value === 'shopping') {\n                setShopping(false);\n            } else if (value === 'sorting') {\n                setSorting(false);\n            }\n        }\n    }\n\n    const { \n        name,\n        phone,\n        gender,\n     } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n\n\n    // if(isAuthenticated && !profile.loading && profile.profile) {\n    //     if(!profile.profile.registration_complete) {\n    //         history.push(`/account-setup`);\n    //     } else {\n    //         history.goBack();\n    //     }  \n    // }\n\n    return (\n        <main id=\"home\">\n            <div className=\"attendee-setup-container\">\n                <h2 className=\"slogan\" style={{margin:'auto'}}>\n                    My QR Code\n                </h2>\n                <section className=\"attendee-form\">\n                    <form>\n                        <h4>* Indicates required fields</h4>\n                        <fieldset>\n                            <div className=\"row\" label=\"*\">\n                                <input \n                                    type=\"text\" \n                                    name=\"phone\" \n                                    placeholder=\"Enter Phone Number\" \n                                    value={phone}\n                                    onChange={e => onChange(e)}\n                                />\n                            </div>\n                            <div className=\"row\" label=\"*\">\n                                <input \n                                    type=\"text\" \n                                    name=\"name\" \n                                    placeholder=\"Enter Full Name\" \n                                    value={name}\n                                    onChange={e => onChange(e)}\n                                />\n                            </div>\n                            <div className=\"row select\" label=\"*\">\n                                <select \n                                    name=\"gender\"\n                                    value={gender}\n                                    onChange={e => onChange(e)}\n                                >\n                                    <option value=\"male\">Male</option>\n                                    <option value=\"female\">Female</option>\n                                </select>\n                            </div>\n                            <div className=\"row\" label=\"*\">\n                                <div className=\"pilot-options\">\n                                    <label onClick={() => handleJobType('delivery')} className=\"pilot-option\">\n                                        {packageDeliv ? (\n                                            <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                            </div>\n                                        ) : (\n                                            <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                        )}\n                                        <span>Package Delivery Driver</span>\n                                    </label>\n                                    <label onClick={() => handleJobType('pickup')} className=\"pilot-option\">\n                                        {pickupDeliv ? (\n                                            <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                            </div>\n                                        ) : (\n                                            <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                        )}\n                                        <span>Pick-up Delivery Driver</span>\n                                    </label>\n                                    <label onClick={() => handleJobType('shopping')} className=\"pilot-option\">\n                                        {shopping ? (\n                                            <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                            </div>\n                                        ) : (\n                                            <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                        )}\n                                        <span>In-store Shopper</span>\n                                    </label>\n                                    <label onClick={() => handleJobType('sorting')} className=\"pilot-option\">\n                                        {sorting ? (\n                                            <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                            </div>\n                                        ) : (\n                                            <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                        )}\n                                        <span>Sorting & Packaging</span>\n                                    </label>\n                                </div>\n                            </div>\n                        </fieldset>\n                    </form>\n                    <div className=\"button-container full\">\n                        <a href=\"/\" className=\"button\" target=\"_blank\">\n                            Check-In\n                        </a>\n                    </div>\n                    <div className=\"disclaimer\">\n                        <p>\n                            We use Stripe to make sure you get paid on time and to keep your personal bank and details secure. Click \n                            {' '}<strong>Save and continue</strong>  to set up your payments on Stripe.\n                        </p>\n                    </div>\n                </section>\n            </div>\n        </main>\n    )\n}\n\nAuth.propTypes = {\n\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nexport default Auth;\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Qr.js",["86","87","88","89"],"import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types';\n\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\nconst Success = props => {\n    return (\n        <Fragment>\n            <div id=\"home\" className=\"page-full\">\n                <h2 className=\"slogan\" style={{margin:'auto'}}>\n                    Success! Your QR Code was created...\n                </h2>\n\n                <div className=\"qr-img-container\">\n                    <img className=\"qr-img\" src={qrPNG} />\n                </div>\n\n                <p>\n\t\t            Scan this QR code with your phone's camera app to see your QR code in action (or click it):\n                </p>\n\n\n                <div className=\"group design\">\n                    <div className=\"heading\">\n                        SAVE AND EDIT FOR LATER\n                    </div>\n                    <p>You can edit this QR Code attendee list at any time later with the URL in the address bar of this page. You can bookmark this page or copy the URL below to edit this QR Code later:</p>\n\n                    <input type=\"text\" value=\"https://qrmenucreator.com/____SAVE_THIS_URL_TO_EDIT_YOUR_MENU_LATER____&action=edit&menu_id=akzsqz&menu_hash=hyswmhlby0lodavg\" style={{width:'calc(100% - 14px)'}} />\n\n                    <p>We can also send this URL to your email so you don't lose it:</p>\n\n                    <div className=\"input-container\">\n                        Your email:{' '}\n                        <input type=\"text\" className=\"email\" value=\"example@example.com\" style={{display:'inline-block', marginLeft:'10px', width:'200px'}} />\n                        <div className=\"button\">\n                            Send me an edit link\n                        </div>\n                    </div> \n                </div>\n                \n                {/* <div style={{display:'flex', justifyContent:'center'}}>\n                    <YoutubeBlock videoId='_nBlN9yp9R8' />\n                </div> */}\n\n                <a href=\"/\" className=\"qr_code_link action-save-changes\" target=\"_blank\">\n                    {/* <div className=\"qr_code\">\n                        <img className=\"qr_code_logo\" src=\"https://qrmenucreator.com/assets/11.png?2\" />\n                        <canvas width=\"1000\" height=\"1000\" style={{display:'none'}} />\n                        <img style={{display: 'block'}} src=\"https://lh3.googleusercontent.com/proxy/WfUMWqfw-3Mb2w9wPBhvFme--pGZJsjKPRsLxtSyMnqdckRlaNqAVZauN5att8-i9fsSYbonKzltSadFBO-EwPS9ZDREQTQ5wmj-xZqLg-ka0PcQun6xU_4e\" />\n                    </div> */}\n                </a>\n                <div className=\"button-container full medium\">\n                    <a href=\"/dashboard\" className=\"button\" target=\"_blank\">\n                        View Dashboard\n                    </a>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nSuccess.propTypes = {\n\n}\n\nexport default Success\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/src/pages/Success.js",["90","91","92","93"],"import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types';\n\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\nconst Success = props => {\n    return (\n        <Fragment>\n            <div id=\"home\" className=\"page-full\">\n                <h2 className=\"slogan\" style={{margin:'auto'}}>\n                    Congratulations! You successfully checked in...\n                </h2>\n\n                <p>\n\t\t            Did you know that you can create a QR Code of your very own? Yes! It's so easy just click below, enter a name, and start scanning.\n                </p>\n\n                <div className=\"button-container full medium\">\n                    <a href=\"/\" className=\"button\" target=\"_blank\">\n                        Create QR  Code\n                    </a>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nSuccess.propTypes = {\n\n}\n\nexport default Success\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":35},{"ruleId":"98","severity":1,"message":"103","line":1,"column":37,"nodeType":"100","messageId":"101","endLine":1,"endColumn":46},{"ruleId":"98","severity":1,"message":"104","line":2,"column":50,"nodeType":"100","messageId":"101","endLine":2,"endColumn":54},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"98","severity":1,"message":"106","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":20},{"ruleId":"98","severity":1,"message":"107","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":241,"column":21,"nodeType":"110","endLine":241,"endColumn":59},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"98","severity":1,"message":"104","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":11,"column":17,"nodeType":"110","endLine":11,"endColumn":55},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"94","replacedBy":"111"},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","severity":1,"message":"103","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":38,"column":37,"nodeType":"110","endLine":38,"endColumn":77},{"ruleId":"108","severity":1,"message":"109","line":73,"column":41,"nodeType":"110","endLine":73,"endColumn":93},{"ruleId":"113","severity":1,"message":"114","line":117,"column":37,"nodeType":"110","endLine":117,"endColumn":77},{"ruleId":"108","severity":1,"message":"109","line":152,"column":41,"nodeType":"110","endLine":152,"endColumn":93},{"ruleId":"113","severity":1,"message":"114","line":196,"column":37,"nodeType":"110","endLine":196,"endColumn":77},{"ruleId":"108","severity":1,"message":"109","line":231,"column":41,"nodeType":"110","endLine":231,"endColumn":93},{"ruleId":"98","severity":1,"message":"103","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"98","severity":1,"message":"106","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":20},{"ruleId":"98","severity":1,"message":"107","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":228,"column":21,"nodeType":"110","endLine":228,"endColumn":59},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"104","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"115","line":2,"column":16,"nodeType":"100","messageId":"101","endLine":2,"endColumn":24},{"ruleId":"98","severity":1,"message":"105","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":17},{"ruleId":"98","severity":1,"message":"116","line":195,"column":7,"nodeType":"100","messageId":"101","endLine":195,"endColumn":22},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"98","severity":1,"message":"106","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":20},{"ruleId":"98","severity":1,"message":"107","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":18,"column":21,"nodeType":"110","endLine":18,"endColumn":59},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":17},{"ruleId":"98","severity":1,"message":"106","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":20},{"ruleId":"98","severity":1,"message":"117","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":13},{"ruleId":"98","severity":1,"message":"107","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'PropTypes' is defined but never used.","'YoutubeBlock' is defined but never used.","'frownPNG' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["118"],["119"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Redirect' is defined but never used.","'mapStateToProps' is assigned a value but never used.","'qrPNG' is defined but never used.","no-global-assign","no-unsafe-negation"]