[{"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/index.js":"1","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/App.js":"2","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Success.js":"3","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Landing.js":"4","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Dashboard.js":"5","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Auth.js":"6","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Detail.js":"7","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/layout/Navbar/Navbar.js":"8","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/YoutubeBlock.js":"9","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/store.js":"10","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/profileActions.js":"11","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/authActions.js":"12","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/utils/setAuthToken.js":"13","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/index.js":"14","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/authReducer.js":"15","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/boardReducer.js":"16","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/profileReducer.js":"17","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/types.js":"18","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/alertActions.js":"19","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/alertReducer.js":"20","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/modals/AuthModal.js":"21","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/boardActions.js":"22","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/page_components/QrBoard.js":"23","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/Spinner.js":"24","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/TestQr.js":"25"},{"size":197,"mtime":1610832320363,"results":"26","hashOfConfig":"27"},{"size":1543,"mtime":1611020624153,"results":"28","hashOfConfig":"27"},{"size":1001,"mtime":1610939447900,"results":"29","hashOfConfig":"27"},{"size":14309,"mtime":1611002699621,"results":"30","hashOfConfig":"27"},{"size":2613,"mtime":1611005805373,"results":"31","hashOfConfig":"27"},{"size":14913,"mtime":1611018033762,"results":"32","hashOfConfig":"27"},{"size":16759,"mtime":1611020821668,"results":"33","hashOfConfig":"27"},{"size":674,"mtime":1611005538089,"results":"34","hashOfConfig":"27"},{"size":752,"mtime":1610844820151,"results":"35","hashOfConfig":"27"},{"size":418,"mtime":1610992314629,"results":"36","hashOfConfig":"27"},{"size":2434,"mtime":1610994061924,"results":"37","hashOfConfig":"27"},{"size":5684,"mtime":1611018046769,"results":"38","hashOfConfig":"27"},{"size":251,"mtime":1610992279438,"results":"39","hashOfConfig":"27"},{"size":269,"mtime":1610993712350,"results":"40","hashOfConfig":"27"},{"size":1322,"mtime":1610991680903,"results":"41","hashOfConfig":"27"},{"size":1880,"mtime":1611001208050,"results":"42","hashOfConfig":"27"},{"size":888,"mtime":1610991849553,"results":"43","hashOfConfig":"27"},{"size":1042,"mtime":1611001191720,"results":"44","hashOfConfig":"27"},{"size":380,"mtime":1610993819445,"results":"45","hashOfConfig":"27"},{"size":410,"mtime":1610993737465,"results":"46","hashOfConfig":"27"},{"size":7170,"mtime":1611016861169,"results":"47","hashOfConfig":"27"},{"size":3169,"mtime":1611011778911,"results":"48","hashOfConfig":"27"},{"size":4379,"mtime":1611020858193,"results":"49","hashOfConfig":"27"},{"size":278,"mtime":1611005166969,"results":"50","hashOfConfig":"27"},{"size":3412,"mtime":1611020777712,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"12fpa5",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/index.js",[],["115","116"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/App.js",["117","118","119"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Success.js",["120","121","122","123"],"import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types';\n\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\nconst Success = props => {\n    return (\n        <Fragment>\n            <div id=\"home\" className=\"page-full\">\n                <h2 className=\"slogan\" style={{margin:'auto'}}>\n                    Congratulations! You successfully checked in...\n                </h2>\n\n                <p>\n\t\t            Did you know that you can create a QR Code of your very own? Yes! It's so easy just click below, enter a name, and start scanning.\n                </p>\n\n                <div className=\"button-container full medium\">\n                    <a href=\"/\" className=\"button\" target=\"_blank\">\n                        Create QR  Code\n                    </a>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nSuccess.propTypes = {\n\n}\n\nexport default Success\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Landing.js",["124","125","126","127","128"],"import React, { Fragment, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { addBoard } from '../actions/boardActions';\n\nimport AuthModal from '../components/modals/AuthModal';\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\n\nconst initialState = {\n    name: 'My QR Code'\n};\n\nconst Landing = ({\n    history,\n    auth: { \n        user, \n        isAuthenticated, \n        loading\n    }, \n    profile,\n    addBoard\n}) => {\n    const [formData, setFormData] = useState(initialState);\n\n    const { name } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    const createQR = async (e) => {\n        e.preventDefault();\n    \n        let data = new FormData();\n        // if(formData.file !== '') data.append('file', formData.file);\n        if(name !== '')data.append('name', name);\n\n        console.log('ON ADD BOARD')\n    \n        addBoard({name, history});\n    \n        // mixpanel.track(\"Add Collection Completed\", {\n        //   \"Collection Name\": name,\n        //   \"Collection Category\": categoryData,\n        //   \"Collection Cost\": price,\n        //   \"Store Name\": store.store.name,\n        //   \"Creation Date\": new Date().toISOString(), \n        // });\n    \n    };\n\n    return (\n        <Fragment>\n            <div className=\"page-left\">\n                <div className=\"group\">\n                    <div className=\"text\">\n                        <h2 className=\"slogan\">\n\t\t\t\t            🔖 Make a QR Code Menu for FREE\n                        </h2>\n                        <p className=\"intro\">\n\t\t\t\t            🤳 Let your customers scan a QR code and {' '}\n                            <a target=\"_blank\" href=\"/\">see your menu</a>\n                            {' '}with their phone\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            ✨ Update your menu whenever you want without having to print them again\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            🦠 Reduce the spread of the Coronavirus by removing physical menus\n                        </p>\n                        <p className=\"intro\"> \n\t\t\t\t            🍝 <a href=\"/\">Hundreds of restaurants, cafes and bars</a>\n                            {' '}already use QR Menu Creator\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            📈 See live analytics for your menu like how many times it's scanned when (\n                            <a href=\"/\">see demo</a>)\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            💸 It's completely free, made by{' '}\n                            <a target=\"_blank\" href=\"/\">@essoterik</a>\n                            {/* (founder of <a target=\"_blank\" href=\"/\">Nomad List</a>) */}\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            📱 Scan the QR code on the 👉 right (or below) with your phone's camera app to live preview your edits\n                        </p>\n                        <p className=\"intro\">\n\t\t\t\t            ✍️ You can start by editing the example menu below. You can use \n                            {' '}<a target=\"_blank\" href=\"/\">Markdown styling</a>\n                            {' '}or the styling bar above the text box; your edits are auto-saved and go live immediately\n                        </p>\n                    </div>\n                </div>\n                <div className=\"group settings\">\n                    <div className=\"heading\">\n                        Customize Settings\n                    </div>\n                    <p>\n                        You can change these settings at any time later in account admin page after you have created your QR code.\n                    </p>\n\n                    <div>\n                        💌 QR Code Name:{' '}\n                        <input \n                            type=\"text\" \n                            className=\"email\" \n                            name=\"name\" \n                            value={name} \n                            onChange={e => onChange(e)}\n                            style={{display:'inline-block', width:'200px'}} \n                        />\n                    </div> \n                    \n                </div>\n                <div className=\"group design\">\n                    <div className=\"heading\">\n                        Design your menu\n                    </div>\n                    <div className=\"left\">\n                        🅰 Heading font:{' '}\n                        <select className=\"heading_font\">\n                            <option selected>Open Sans</option>\n                            <option>Indie Flower</option>\n                            <option>Parisienne</option>\n                            <option>Press Start 2P</option>\n                            <option>Flavors</option>\n                            <option>Fredericka the Great</option>\n                            <option>Oleo Script Swash Caps</option>\n                            <option>Nosifer</option>\n                            <option>Eater</option>\n                            <option>Abril Fatface</option>\n                            <option>Anton</option>\n                            <option>Arvo</option>\n                            <option>Cabin</option>\n                            <option>Cormorant</option>\n                            <option>Dokdo</option>\n                            <option>Dosis</option>\n                            <option>Lato</option>\n                            <option>Lobster</option>\n                            <option>Monda</option>\n                            <option>Montserrat</option>\n                            <option>Nunito</option>\n                            <option>Noto Sans</option>\n                            <option>Old Standard TT</option>\n                            <option>Open Sans</option>\n                            <option>Oswald</option>\n                            <option>Pacifico</option>\n                            <option>Poiret One</option>\n                            <option>Poppins</option>\n                            <option>Prata</option>\n                            <option>PT Serif</option>\n                            <option>Raleway</option>\n                            <option>Righteous</option>\n                            <option>Roboto Slab</option>\n                            <option>Source Sans Pro</option>\n                            <option>Ubuntu</option>\n                            <option>Yatra One</option>\n                            <option>Pontano Sans</option>\n                        </select>\n\n                        <br />\n                        \n\t\t\t            🅰 Heading color:{' '}\n                        <input type=\"color\" className=\"heading_color\" value=\"#000000\" />\n\n                        <br />\n\n\t\t\t            🌈 Background color:{' '}\n                        <input type=\"color\" className=\"background_color\" value=\"#f9f9f9\" />\n\n                        <br />\n\n\t\t\t            🅾 Text alignment:{' '}\n                        <select className=\"alignment\">\n                            <option value=\"left\" selected>Left</option>\n                            <option value=\"center\">Center</option>\n                            <option value=\"right\">Right</option>\n                        </select>\n\n                        <br />\n                    </div>\n                    <div className=\"right\">\n                        🅿 Text font:{' '}\n                        <select className=\"text_font\">\n                            <option selected>Open Sans</option>\n                            <option>Indie Flower</option>\n                            <option>Parisienne</option>\n                            <option>Press Start 2P</option>\n                            <option>Flavors</option>\n                            <option>Fredericka the Great</option>\n                            <option>Oleo Script Swash Caps</option>\n                            <option>Nosifer</option>\n                            <option>Eater</option>\n                            <option>Abril Fatface</option>\n                            <option>Anton</option>\n                            <option>Arvo</option>\n                            <option>Cabin</option>\n                            <option>Cormorant</option>\n                            <option>Dokdo</option>\n                            <option>Dosis</option>\n                            <option>Lato</option>\n                            <option>Lobster</option>\n                            <option>Monda</option>\n                            <option>Montserrat</option>\n                            <option>Nunito</option>\n                            <option>Noto Sans</option>\n                            <option>Old Standard TT</option>\n                            <option>Open Sans</option>\n                            <option>Oswald</option>\n                            <option>Pacifico</option>\n                            <option>Poiret One</option>\n                            <option>Poppins</option>\n                            <option>Prata</option>\n                            <option>PT Serif</option>\n                            <option>Raleway</option>\n                            <option>Righteous</option>\n                            <option>Roboto Slab</option>\n                            <option>Source Sans Pro</option>\n                            <option>Ubuntu</option>\n                            <option>Yatra One</option>\n                            <option>Pontano Sans</option>\n                        </select>\n\n                        <br />\n                        \n\t\t\t            🅰 Text color:{' '}\n                        <input type=\"color\" className=\"text_color\" value=\"#808080\" />\n\n                        <br />\n\n\t\t\t            🌓 Tone:{' '}\n                        <select className=\"tone\">\n                            <option value=\"light\" selected>Light</option>\n                            <option value=\"dark\">Dark</option>\n                        </select>\n\n                        <br />\n\n\t\t\t            🖼 Background image:{' '}\n                        <input type=\"file\" accept=\".jpg,.jpeg,.png\" className=\"background_image\" />\n\n                        <br />\n\n                        🅰 QR color:{' '}\n                        <input type=\"color\" className=\"qr_color\" value=\"#000000\" />\n\n                        <br />\n                    </div>\n                </div>\n                \n                <div className=\"group chart\">\n                    {/* <button className=\"qr-campaign-charts__date\">\n                        <span className=\"icon-qr-calendar\">\n                            <i class=\"fas fa-calendar-alt\"></i>\n                        </span>\n                        Dec 18, 2020 - Jan 17, 2021\n                        <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                            <i class=\"fas fa-chevron-down\"></i>\n                        </span>\n                    </button>\n                    <button className=\"qr-campaign-charts__groupBy\">\n                        Month\n                        <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                            <i class=\"fas fa-chevron-down\"></i>\n                        </span>\n                    </button> */}\n                    <button className=\"qr-campaign-charts__download\">\n                        <span className=\"icon-qr-calendar\">\n                            <i class=\"fas fa-cog\"></i>\n                        </span>\n                        Options\n                        <span className=\"icon-qr-drop\" style={{marginTop:'10px'}}>\n                            <i class=\"fas fa-chevron-down\"></i>\n                        </span>\n                    </button>\n\n                    <div className=\"no-rides\">\n                        {/* <div className=\"rocket\">\n                            <img src={frownPNG} />\n                        </div> */}\n                        <h1>Scan your QR Code to view <br/> attendee list . . .</h1>\n                        <h2>No attendees to display yet.</h2>\n                    </div>\n                    \n                </div>\n\n            </div>\n            <div className=\"page-right\">\n                <div className=\"qr-img-container\">\n                    <img className=\"qr-img\" src={qrPNG} />\n                </div>\n                \n                {/* <div style={{display:'flex', justifyContent:'center'}}>\n                    <YoutubeBlock videoId='_nBlN9yp9R8' />\n                </div> */}\n\n                <div className=\"divider\"></div>\n                <p>\n\t\t            Scan this QR code with your phone's camera app to see your QR code in action (or click it):\n                </p>\n                <a href=\"/\" className=\"qr_code_link action-save-changes\" target=\"_blank\">\n                    {/* <div className=\"qr_code\">\n                        <img className=\"qr_code_logo\" src=\"https://qrmenucreator.com/assets/11.png?2\" />\n                        <canvas width=\"1000\" height=\"1000\" style={{display:'none'}} />\n                        <img style={{display: 'block'}} src=\"https://lh3.googleusercontent.com/proxy/WfUMWqfw-3Mb2w9wPBhvFme--pGZJsjKPRsLxtSyMnqdckRlaNqAVZauN5att8-i9fsSYbonKzltSadFBO-EwPS9ZDREQTQ5wmj-xZqLg-ka0PcQun6xU_4e\" />\n                    </div> */}\n                </a>\n            </div>\n            <div className=\"button-container\">\n                <div onClick={createQR} className=\"button\">\n                    Create QR Code\n                </div>\n            </div>\n\n            {!loading && !isAuthenticated ? <AuthModal /> : null }\n        </Fragment>\n    )\n}\n\nLanding.propTypes = {\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    addBoard: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { addBoard })(withRouter(Landing));\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Dashboard.js",["129","130","131"],"import React, { useEffect, useState, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getBoards } from '../actions/boardActions';\n\nimport AuthModal from '../components/modals/AuthModal';\nimport QrBoard from '../components/page_components/QrBoard';\nimport Spinner from '../components/common/Spinner';\n\nimport qrPNG from '../utils/imgs/frame.png';\n\nconst Dashboard = ({\n    auth: {\n        user, \n        isAuthenticated, \n        loading\n    },\n    board,\n    getBoards\n}) => {\n    // Nav underline Table\n    const [tableShow1, setTableShow1] = useState('all');\n\n    useEffect(() => {\n        if(user) {\n            getBoards();\n        }\n    }, [user]);\n\n    let boardList;\n\n    if(board.boards === null || board.loading) {\n        boardList = <Spinner />;\n    }\n    else {\n        if(board.boards.length > 0) {\n            boardList = board.boards.map(board => {\n                return (\n                    <QrBoard key={board._id} board={board} />\n                )\n            })\n        }\n        else {\n            // boardList = <Title name=\"No boards\" title=\"Available\" />\n            boardList = (\n                <div className=\"no-rides\">\n                    <h1>No QR Codes to display yet...</h1>\n                    <h2>Your QR Codes will display here</h2>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <Fragment>\n            <ul class=\"nav-underline store\">\n                <div onClick={e => setTableShow1('all')} className={tableShow1 === \"all\" && \"active\"}><li><i class=\"fas fa-list\"></i><p>All</p></li></div>\n                <div onClick={e => setTableShow1('active')} className={tableShow1 === \"active\" && \"active\"}><li><i class=\"far fa-play-circle\"></i><p>Active</p></li></div>\n                <div onClick={e => setTableShow1('paused')} className={tableShow1 === \"paused\" && \"active\"}><li><i class=\"far fa-pause-circle\"></i><p>Paused</p></li></div>\n            </ul>\n            <div className=\"qr-manage-content__items\">\n                {boardList}\n            </div>\n\n            {!loading && !isAuthenticated ? <AuthModal /> : null }\n        </Fragment>\n    )\n}\n\nDashboard.propTypes = {\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    board: PropTypes.object.isRequired,\n    getBoards: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile,\n    board: state.board\n});\n\nexport default connect(mapStateToProps, { getBoards })(withRouter(Dashboard));\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Auth.js",["132","133","134","135","136"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getBoardById } from '../actions/boardActions';\n\nimport { addScan } from '../actions/boardActions';\nimport { login, register } from '../actions/authActions';\n\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nconst Auth = ({ \n    history,\n    match,\n    addScan,\n    login,\n    register,\n    getBoardById,\n    auth,\n    board: {\n        board,\n        loading\n    },\n}) => {\n    const [formSignUp, setFormSignUp] = useState(true);\n\n    const [formData, setFormData] = useState(initialState);\n\n    // Has user been added to attendee list\n    const [sentScan, setSentScan] = useState(false);\n\n    const [packageDeliv, setPackageDeliv] = useState(false);\n    const [pickupDeliv, setPickupDeliv] = useState(false);\n    const [shopping, setShopping] = useState(false);\n    const [sorting, setSorting] = useState(false);\n\n    const [roles, setRoles] = useState([]);\n\n    useEffect(() => {\n        getBoardById(match.params.id);\n    }, []);\n\n    const onAddRole = (value) => {\n        setRoles([...roles, value]);\n        // filterItems(value);\n    }\n\n    const onDeleteRole = (value) => {\n        let remainingTags = roles.filter ((r) => {\n        return (r !== value);\n        });\n        setRoles([...remainingTags]);\n        // unFilterItems(value);\n    }\n\n    const handleJobType = (value) => {\n        console.log('ROLES:')\n        console.log(value);\n        console.log(roles);\n        if(value === 'delivery' && !packageDeliv) {\n            setPackageDeliv(true);\n\n            onAddRole(value);\n        } else if (value === 'pickup' && !pickupDeliv) {\n            setPickupDeliv(true);\n\n            onAddRole(value);\n        } else if (value === 'shopping' && !shopping) {\n            setShopping(true);\n\n            onAddRole(value);\n        } else if (value === 'sorting' && !sorting) {\n            setSorting(true);\n\n            onAddRole(value);\n        } else {\n            onDeleteRole(value);\n\n            if(value === 'delivery') {\n                setPackageDeliv(false);\n            } else if (value === 'pickup') {\n                setPickupDeliv(false);\n            } else if (value === 'shopping') {\n                setShopping(false);\n            } else if (value === 'sorting') {\n                setSorting(false);\n            }\n        }\n    }\n\n    const { \n        name,\n        email,\n        password,\n     } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        if(auth.user === null) {\n            if(formSignUp) {\n                const first_name = name.split(' ').slice(0, -1).join(' ');\n                const last_name = name.split(' ').slice(-1).join(' ');\n    \n                console.log('FIRST NAME');\n                console.log(first_name)\n                console.log('LAST NAME');\n                console.log(last_name);\n    \n                register({ \n                    first_name, \n                    last_name, \n                    email, \n                    password, \n                    history \n                });\n            } else {\n                login(email, password);\n            }\n        }\n\n        setFormData(initialState);\n    }\n\n    if(!sentScan && auth.user && board) {\n        addScan(match.params.id, history)\n        setSentScan(true);\n    }\n\n    // if(isAuthenticated && !profile.loading && profile.profile) {\n    //     if(!profile.profile.registration_complete) {\n    //         history.push(`/account-setup`);\n    //     } else {\n    //         history.goBack();\n    //     }  \n    // }\n\n    return (\n        <main id=\"home\">\n            <div className=\"attendee-setup-container\">\n                <h2 className=\"slogan\" style={{margin:'auto'}}>\n                    My QR Code\n                </h2>\n                <section className=\"attendee-form\">\n                    <div style={{width:'100%'}} className=\"profile-settings-transition\">\n                        <div id=\"transition-1\" style={{width:'100%'}} className={formSignUp ? \"profile-settings-container active\" : \"profile-settings-container\"}>\n                            <form>\n                                <h4>Create an account to Check-In</h4>\n                                <fieldset>\n                                    <div className=\"row\" label=\"Full Name\">\n                                        <input \n                                            type=\"text\" \n                                            name=\"name\" \n                                            placeholder=\"Enter Full Name\" \n                                            value={name}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    <div className=\"row\" label=\"Email\">\n                                        <input \n                                            type=\"email\" \n                                            name=\"email\" \n                                            placeholder=\"Enter Email\" \n                                            value={email}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    <div className=\"row\" label=\"Password\">\n                                        <input \n                                            type=\"password\" \n                                            name=\"password\" \n                                            placeholder=\"Enter Password\" \n                                            value={password}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    {/* <div className=\"row select\" label=\"Gender\">\n                                        <select \n                                            name=\"gender\"\n                                            value={gender}\n                                            onChange={e => onChange(e)}\n                                        >\n                                            <option value=\"male\">Male</option>\n                                            <option value=\"female\">Female</option>\n                                        </select>\n                                    </div> */}\n                                </fieldset>\n                            </form>  \n                        </div>\n                        <div id=\"transition-2\" style={{width:'100%', justifyContent:'center'}} className={!formSignUp ? \"profile-settings-container active\" : \"profile-settings-container\"}>\n                            <form>\n                                <h4>Check-In</h4>\n                                <fieldset>\n                                    {/* <div className=\"row\" label=\"Full Name\">\n                                        <input \n                                            type=\"text\" \n                                            name=\"phone\" \n                                            placeholder=\"Enter Phone Number\" \n                                            value={phone}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div> */}\n                                    <div className=\"row\" label=\"Email\">\n                                        <input \n                                            type=\"email\" \n                                            name=\"email\" \n                                            placeholder=\"Enter Email\" \n                                            value={email}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    <div className=\"row\" label=\"Password\">\n                                        <input \n                                            type=\"password\" \n                                            name=\"password\" \n                                            placeholder=\"Enter Password\" \n                                            value={password}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    {/* <div className=\"row\">\n                                        <div className=\"pilot-options\">\n                                            <label onClick={() => handleJobType('delivery')} className=\"pilot-option\">\n                                                {packageDeliv ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                style={{color:'#208cec'}}>Package Delivery Driver</span>\n                                            </label>\n                                            <label onClick={() => handleJobType('pickup')} className=\"pilot-option\">\n                                                {pickupDeliv ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                <span>Pick-up Delivery Driver</span>\n                                            </label>\n                                            <label onClick={() => handleJobType('shopping')} className=\"pilot-option\">\n                                                {shopping ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                <span>In-store Shopper</span>\n                                            </label>\n                                            <label onClick={() => handleJobType('sorting')} className=\"pilot-option\">\n                                                {sorting ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                <span>Sorting & Packaging</span>\n                                            </label>\n                                        </div>\n                                    </div> */}\n                                </fieldset>\n                            </form>\n                        </div>\n                    </div>\n                    <div style={{width:'80%'}} className=\"button-container full\">\n                        <div onClick={onSubmit} className=\"button\">\n                            Check-In\n                        </div>\n                    </div>\n                    {formSignUp ? <div className=\"link-text\" onClick={() => setFormSignUp(false)} style={{width: '100%', marginTop:'10px', cursor:'pointer', textAlign:'center'}}>Already have an account? <span style={{color:'#208cec'}}>Log In</span></div>\n                    : <div className=\"btn-secondary\" onClick={() => setFormSignUp(true)} style={{width: '100%', marginTop:'10px', cursor:'pointer', textAlign:'center'}}>Don't have an account? <span style={{color:'#208cec'}}>Register</span></div>}\n                    {/* <div className=\"disclaimer\">\n                        <p>\n                            We use Stripe to make sure you get paid on time and to keep your personal bank and details secure. Click \n                            {' '}<strong>Save and continue</strong>  to set up your payments on Stripe.\n                        </p>\n                    </div> */}\n                </section>\n            </div>\n        </main>\n    )\n}\n\nAuth.propTypes = {\n    addScan: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    board: PropTypes.object.isRequired,\n    getBoardById: PropTypes.func.isRequired,\n};\n  \nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    board: state.board\n});\n  \nexport default connect(mapStateToProps, { addScan, register, login, getBoardById})(withRouter(Auth));\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Detail.js",["137","138","139","140","141","142","143","144"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/layout/Navbar/Navbar.js",["145","146","147"],"import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport qrLogo from '../../../utils/imgs/project_logo.png'\n\nconst Navbar = props => {\n    return (\n        <div className=\"nav-bar\">\n            <div className=\"logo\">\n                <img className=\"emoji\" src={qrLogo} />\n            </div>\n            <a href=\"/\" style={{marginLeft:'10px'}}>\n                <h1 className=\"name\">\n\t\t\t        Project QR\n                </h1>\n            </a>\n            <a href=\"/\" className=\"button\" style={{color:'#fff'}}>\n\t\t\t    Create QR Code\n            </a>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n\n}\n\nexport default Navbar\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/YoutubeBlock.js",["148"],"import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport YouTube from 'react-youtube';\n\n\nfunction YoutubeBlock(props) {\n        const opts = {\n          height: '169',\n          width: '300',\n          playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n          },\n        };\n\n        const videoOnReady = (event) => {\n            // access to player in all event handlers via event.target\n            event.target.pauseVideo();\n            console.log(event.target);\n        }\n        const {videoId} = props;\n        return (\n            <YouTube videoId={videoId} opts={opts} onReady={videoOnReady} />\n        );\n}\n\nYoutubeBlock.propTypes = {\n\n}\n\nexport default YoutubeBlock\n\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/store.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/profileActions.js",["149"],"import axios from 'axios';\nimport { setAlert } from './alertActions';\n\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from './types';\n\n// Get Current users Profile \nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// Get profiles by ID\nexport const getProfileById = userId => async dispatch => {\n    dispatch({ type: CLEAR_PROFILE });\n\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n\n// Create or update profile\nexport const createProfile = (formData, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This can NOT be undone!'))\n\n    try {\n        await axios.delete(`/api/profile`);\n\n        dispatch({ type: CLEAR_PROFILE });\n        dispatch({ type: ACCOUNT_DELETED });\n\n        dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/authActions.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/utils/setAuthToken.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/index.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/authReducer.js",["150"],"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, UPDATE_AUTH, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case UPDATE_AUTH:\n            return {\n                ...state,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/boardReducer.js",["151"],"import {\n    GET_BOARDS,\n    BOARD_ERROR,\n    DELETE_BOARD,\n    ADD_BOARD,\n    UPDATE_BOARD_LIST,\n    GET_BOARD,\n    EDIT_BOARD,\n    CLEAR_BOARDS\n  } from '../actions/types';\n  \n  const initialState = {\n    boards: [],\n    board: null,\n    loading: true,\n    error: {}\n  };\n  \n  export default function(state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case GET_BOARDS:\n        return {\n          ...state,\n          boards: payload,\n          loading: false\n        };\n      case GET_BOARD:\n        return {\n          ...state,\n          board: payload,\n          loading: false\n        };\n      case ADD_BOARD:\n        return {\n          ...state,\n          boards: [payload, ...state.boards],\n          board: payload,\n          loading: false\n        };\n      case EDIT_BOARD:\n        return {\n            ...state,\n            board: payload,\n            loading: false\n        };\n      case DELETE_BOARD:\n        return {\n          ...state,\n          boards: state.boards.filter(board => board._id !== payload),\n          loading: false\n        };\n      case BOARD_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      case UPDATE_BOARD_LIST:\n          let tempDetail = state.board;\n\n          if(tempDetail._id === action.payload.id) { \n              tempDetail = {...tempDetail, scan_list: action.payload.scan_list }\n          }\n\n          return {\n              ...state,\n              boards: state.boards.map(board =>\n                  board._id === action.payload.id ? { ...board, scan_list: action.payload.scan_list } : board\n              ),\n              board: tempDetail\n          };\n      case CLEAR_BOARDS:\n        return {\n            ...state,\n            boards: [],\n            loading: false\n        }\n      default:\n        return state;\n    }\n  }","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/profileReducer.js",["152","153","154","155"],"import { GET_PROFILE, SET_SUBS, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                profile: null\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/types.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/alertActions.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/alertReducer.js",["156","157","158"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case 'SET_ALERT':\n            return [...state, payload];\n        case 'REMOVE_ALERT':\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/modals/AuthModal.js",["159","160","161","162"],"import React, { useState, useEffect, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alertActions';\nimport { register, login } from '../../actions/authActions';\nimport Modal from 'react-responsive-modal';\nimport styled from 'styled-components';\n\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    signup: true\n};\n\nconst AuthModal = ({ setAlert, register, login, auth: { isAuthenticated, user }, history }) => {\n\n    const [displayModal, toggleModal] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n    const [formSignUp, setFormSignUp] = useState(true);\n\n    useEffect(() => {\n        if(!user) {\n            setFormData(initialState)\n        } else {\n            if(!user.signup) {\n                setFormSignUp(false)\n            }\n        };\n        if(!isAuthenticated) {\n            setTimeout(() => toggleModal(!displayModal),5000)\n        }\n    }, []);\n\n\n\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n        console.log(formData);\n\n        console.log(formData);\n    };\n\n    const { name, email, password } = formData;\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        const first_name = name.split(' ').slice(0, -1).join(' ');\n        const last_name = name.split(' ').slice(-1).join(' ');\n\n        console.log('FIRST NAME');\n        console.log(first_name)\n        console.log('LAST NAME');\n        console.log(last_name);\n\n        if(formSignUp) {\n            // const fullName = `${formData.firstname} ${formData.lastname}`\n            register({ \n                first_name, \n                last_name, \n                email, \n                password, \n                history \n            });\n        } else {\n            login(email, password);\n        }\n\n        setFormData(initialState);\n    }\n\n    const bg2 = {\n        modal: {\n            boxShadow: \"none\",\n            borderRadius: \"15px\",\n            border: \"1px solid rgb(214, 214, 214)\",\n            padding: \"0\"\n        },\n        overlay: {\n          background: \"rgba(20,20,20, .5)\"\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <ModalContainer>\n                <div id=\"modal\" className=\"col-10 mx-auto col-md-8 col-lg-6 text-center text-capitalize py-5\">\n                    <div className=\"form-container sign-up-container\" id=\"sign-up-container\">\n                        <form style={{display:'flex', flexDirection:'column', alignItems:'center', marginBottom: '2rem'}} id=\"auth-form\" onSubmit={onSubmit}>\n                            {formSignUp ? (\n                                <Fragment>\n                                    <h3>Free Unlimited Shopping</h3>\n                                    <p style={{color: '#808080', marginTop:'10px'}}>Welcome to the fastest place to shop online!</p>\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        className=\"input_line\"\n                                        placeholder=\"Enter Name\"\n                                        value={formData.name}\n                                        onChange={e => onChange(e)}\n                                        style={{margin:'10px 0', width:'100%', height:'50px'}}\n                                    />\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <h3>Welcome Back!</h3>\n                                    <p style={{color: '#808080', marginTop:'10px'}}>Fast, Free unlimited shopping from the fastest place to shop online.</p>\n                                </Fragment>\n                            )}\n                            <input\n                            type=\"email\"\n                            name=\"email\"\n                            className=\"input_line\"\n                            placeholder=\"Enter Email\"\n                            value={formData.email}\n                            onChange={e => onChange(e)}\n                            style={{margin:'10px 0', width:'100%', height:'50px'}}\n                            />\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                className=\"input_line\"\n                                placeholder=\"Enter Password\"\n                                value={formData.password}\n                                onChange={e => onChange(e)}\n                                style={{margin:'10px 0', width:'100%', height:'50px'}}\n                            />\n                            {/* <input\n                                type=\"password\"\n                                name=\"password2\"\n                                className=\"input_line\"\n                                placeholder=\"Confirm Password\"\n                                value={password2}\n                                onChange={e => onChange(e)}\n                                style={{margin:'10px 0', width:'100%', height:'50px'}}\n                            /> */}\n                            {formSignUp ? (\n                                <Fragment>\n                                    <button style={{width: '100%'}} type=\"submit\">Create An Account</button>\n                                    <div className=\"btn-secondary\" onClick={() => setFormSignUp(false)} style={{width: '100%'}}>Already have an account? <span>Log In</span></div>\n                                </Fragment>\n                            ): (\n                                <Fragment>\n                                    <button style={{width: '100%'}} type=\"submit\">Start Shopping!</button>\n                                    <div className=\"btn-secondary\" onClick={() => setFormSignUp(true)} style={{width: '100%'}}>Don't have an account? <span>Get Started</span></div>\n                                </Fragment>\n                            )}\n                            \n                            {/* <Link to=\"/login\" style={{color:'#808080', marginTop:'1rem'}}>Already have an account?</Link> */}\n                        </form>\n                    </div>\n                </div>\n            </ModalContainer>\n        </React.Fragment>\n    )\n}\n\nconst ModalContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.3);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 300;\n    #modal {\n        background: #fff;\n        @media (max-width: 768px){\n            margin-top: -7rem;\n        }\n    }\n`;\n\nAuthModal.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { setAlert, register, login })(withRouter(AuthModal));\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/boardActions.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/page_components/QrBoard.js",["163","164","165","166","167"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/Spinner.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/TestQr.js",["168","169","170","171","172"],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"181","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":35},{"ruleId":"177","severity":1,"message":"182","line":2,"column":50,"nodeType":"179","messageId":"180","endLine":2,"endColumn":54},{"ruleId":"177","severity":1,"message":"183","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"184","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":20},{"ruleId":"177","severity":1,"message":"185","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":13},{"ruleId":"177","severity":1,"message":"186","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":16},{"ruleId":"177","severity":1,"message":"187","line":1,"column":37,"nodeType":"179","messageId":"180","endLine":1,"endColumn":46},{"ruleId":"177","severity":1,"message":"182","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"184","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":20},{"ruleId":"177","severity":1,"message":"186","line":12,"column":8,"nodeType":"179","messageId":"180","endLine":12,"endColumn":16},{"ruleId":"188","severity":1,"message":"189","line":294,"column":21,"nodeType":"190","endLine":294,"endColumn":59},{"ruleId":"177","severity":1,"message":"182","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"177","severity":1,"message":"185","line":12,"column":8,"nodeType":"179","messageId":"180","endLine":12,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":30,"column":8,"nodeType":"193","endLine":30,"endColumn":14,"suggestions":"194"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"182","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"195","line":2,"column":16,"nodeType":"179","messageId":"180","endLine":2,"endColumn":24},{"ruleId":"191","severity":1,"message":"196","line":47,"column":8,"nodeType":"193","endLine":47,"endColumn":10,"suggestions":"197"},{"ruleId":"177","severity":1,"message":"198","line":62,"column":11,"nodeType":"179","messageId":"180","endLine":62,"endColumn":24},{"ruleId":"177","severity":1,"message":"184","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":20},{"ruleId":"177","severity":1,"message":"185","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":13},{"ruleId":"177","severity":1,"message":"186","line":12,"column":8,"nodeType":"179","messageId":"180","endLine":12,"endColumn":16},{"ruleId":"177","severity":1,"message":"199","line":26,"column":24,"nodeType":"179","messageId":"180","endLine":26,"endColumn":37},{"ruleId":"177","severity":1,"message":"200","line":28,"column":12,"nodeType":"179","messageId":"180","endLine":28,"endColumn":24},{"ruleId":"177","severity":1,"message":"201","line":28,"column":26,"nodeType":"179","messageId":"180","endLine":28,"endColumn":41},{"ruleId":"191","severity":1,"message":"196","line":32,"column":8,"nodeType":"193","endLine":32,"endColumn":10,"suggestions":"202"},{"ruleId":"188","severity":1,"message":"189","line":317,"column":21,"nodeType":"190","endLine":317,"endColumn":72},{"ruleId":"177","severity":1,"message":"183","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"182","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":11,"column":17,"nodeType":"190","endLine":11,"endColumn":55},{"ruleId":"177","severity":1,"message":"183","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"203","line":4,"column":38,"nodeType":"179","messageId":"180","endLine":4,"endColumn":52},{"ruleId":"204","severity":1,"message":"205","line":10,"column":1,"nodeType":"206","endLine":49,"endColumn":2},{"ruleId":"204","severity":1,"message":"205","line":19,"column":3,"nodeType":"206","endLine":83,"endColumn":4},{"ruleId":"177","severity":1,"message":"207","line":1,"column":23,"nodeType":"179","messageId":"180","endLine":1,"endColumn":31},{"ruleId":"177","severity":1,"message":"208","line":1,"column":79,"nodeType":"179","messageId":"180","endLine":1,"endColumn":91},{"ruleId":"177","severity":1,"message":"209","line":1,"column":93,"nodeType":"179","messageId":"180","endLine":1,"endColumn":102},{"ruleId":"204","severity":1,"message":"205","line":9,"column":1,"nodeType":"206","endLine":36,"endColumn":2},{"ruleId":"177","severity":1,"message":"210","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":19},{"ruleId":"177","severity":1,"message":"211","line":1,"column":21,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"204","severity":1,"message":"205","line":5,"column":1,"nodeType":"206","endLine":16,"endColumn":2},{"ruleId":"177","severity":1,"message":"182","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"212","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":13},{"ruleId":"191","severity":1,"message":"213","line":35,"column":8,"nodeType":"193","endLine":35,"endColumn":10,"suggestions":"214"},{"ruleId":"177","severity":1,"message":"215","line":75,"column":11,"nodeType":"179","messageId":"180","endLine":75,"endColumn":14},{"ruleId":"177","severity":1,"message":"183","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"216","line":5,"column":16,"nodeType":"179","messageId":"180","endLine":5,"endColumn":26},{"ruleId":"177","severity":1,"message":"185","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":30,"column":29,"nodeType":"190","endLine":30,"endColumn":69},{"ruleId":"188","severity":1,"message":"189","line":65,"column":33,"nodeType":"190","endLine":65,"endColumn":98},{"ruleId":"177","severity":1,"message":"184","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":20},{"ruleId":"177","severity":1,"message":"185","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":13},{"ruleId":"177","severity":1,"message":"186","line":10,"column":8,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},{"ruleId":"191","severity":1,"message":"196","line":24,"column":8,"nodeType":"193","endLine":24,"endColumn":10,"suggestions":"219"},{"ruleId":"188","severity":1,"message":"189","line":34,"column":21,"nodeType":"190","endLine":34,"endColumn":72},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'PropTypes' is defined but never used.","'YoutubeBlock' is defined but never used.","'qrPNG' is defined but never used.","'frownPNG' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBoards'. Either include it or remove the dependency array. If 'getBoards' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["222"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'getBoardById' and 'match.params.id'. Either include them or remove the dependency array. If 'getBoardById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["223"],"'handleJobType' is assigned a value but never used.","'setRenderList' is assigned a value but never used.","'attendeeList' is assigned a value but never used.","'setAttendeeList' is assigned a value but never used.",["224"],"'UPDATE_PROFILE' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'SET_SUBS' is defined but never used.","'GET_PROFILES' is defined but never used.","'GET_REPOS' is defined but never used.","'SET_ALERT' is defined but never used.","'REMOVE_ALERT' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has missing dependencies: 'displayModal', 'isAuthenticated', and 'user'. Either include them or remove the dependency array. You can also do a functional update 'toggleModal(d => ...)' if you only need 'displayModal' in the 'toggleModal' call.",["225"],"'bg2' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},{"desc":"232","fix":"233"},{"desc":"229","fix":"234"},"Update the dependencies array to be: [getBoards, user]",{"range":"235","text":"236"},"Update the dependencies array to be: [getBoardById, match.params.id]",{"range":"237","text":"238"},{"range":"239","text":"238"},"Update the dependencies array to be: [displayModal, isAuthenticated, user]",{"range":"240","text":"241"},{"range":"242","text":"238"},[758,764],"[getBoards, user]",[1163,1165],"[getBoardById, match.params.id]",[824,826],[1055,1057],"[displayModal, isAuthenticated, user]",[527,529]]