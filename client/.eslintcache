[{"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/index.js":"1","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/App.js":"2","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/store.js":"3","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/profileActions.js":"4","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/utils/setAuthToken.js":"5","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Success.js":"6","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Dashboard.js":"7","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/TestQr.js":"8","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/authActions.js":"9","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/layout/Navbar/Navbar.js":"10","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Auth.js":"11","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Landing.js":"12","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Detail.js":"13","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/types.js":"14","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/alertActions.js":"15","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/boardActions.js":"16","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/Spinner.js":"17","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/YoutubeBlock.js":"18","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/modals/AuthModal.js":"19","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/page_components/QrBoard.js":"20","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/index.js":"21","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/alertReducer.js":"22","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/authReducer.js":"23","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/profileReducer.js":"24","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/boardReducer.js":"25"},{"size":197,"mtime":1610832320363,"results":"26","hashOfConfig":"27"},{"size":1543,"mtime":1611020624153,"results":"28","hashOfConfig":"27"},{"size":418,"mtime":1610992314629,"results":"29","hashOfConfig":"27"},{"size":2434,"mtime":1610994061924,"results":"30","hashOfConfig":"27"},{"size":251,"mtime":1610992279438,"results":"31","hashOfConfig":"27"},{"size":1001,"mtime":1610939447900,"results":"32","hashOfConfig":"27"},{"size":2613,"mtime":1611005805373,"results":"33","hashOfConfig":"27"},{"size":3412,"mtime":1611020777712,"results":"34","hashOfConfig":"27"},{"size":5684,"mtime":1611018046769,"results":"35","hashOfConfig":"27"},{"size":674,"mtime":1611005538089,"results":"36","hashOfConfig":"27"},{"size":14913,"mtime":1611018033762,"results":"37","hashOfConfig":"27"},{"size":16498,"mtime":1615147158038,"results":"38","hashOfConfig":"27"},{"size":16778,"mtime":1615145141500,"results":"39","hashOfConfig":"27"},{"size":1042,"mtime":1611001191720,"results":"40","hashOfConfig":"27"},{"size":380,"mtime":1610993819445,"results":"41","hashOfConfig":"27"},{"size":3169,"mtime":1611011778911,"results":"42","hashOfConfig":"27"},{"size":278,"mtime":1611005166969,"results":"43","hashOfConfig":"27"},{"size":752,"mtime":1610844820151,"results":"44","hashOfConfig":"27"},{"size":6855,"mtime":1611026363746,"results":"45","hashOfConfig":"27"},{"size":4379,"mtime":1611020858193,"results":"46","hashOfConfig":"27"},{"size":269,"mtime":1610993712350,"results":"47","hashOfConfig":"27"},{"size":410,"mtime":1610993737465,"results":"48","hashOfConfig":"27"},{"size":1322,"mtime":1610991680903,"results":"49","hashOfConfig":"27"},{"size":888,"mtime":1610991849553,"results":"50","hashOfConfig":"27"},{"size":1880,"mtime":1611001208050,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"12fpa5",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/index.js",[],["117","118"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/App.js",["119","120","121"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\n// CSS - controlled by /scss\nimport './css/main.css';\n\n// Redux\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport { loadUser } from './actions/authActions';\nimport setAuthToken from './utils/setAuthToken';\nimport { getCurrentProfile } from './actions/profileActions';\n\n// Layout\nimport Navbar from './components/layout/Navbar/Navbar';\nimport Landing from './pages/Landing';\nimport Dashboard from './pages/Dashboard';\nimport Detail from './pages/Detail';\nimport Auth from './pages/Auth';\nimport TestQr from './pages/TestQr';\nimport Success from './pages/Success';\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n    store.dispatch(getCurrentProfile());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            {/* Landing Pages */}\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/test/:id\" component={TestQr} />\n            <Route exact path=\"/details/:id\" component={Detail} />\n            <Route exact path=\"/success\" component={Success} />\n            <Route exact path=\"/:id\" component={Auth} />\n          </Switch>\n        </div>\n\n        </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/store.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/profileActions.js",["122"],"import axios from 'axios';\nimport { setAlert } from './alertActions';\n\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from './types';\n\n// Get Current users Profile \nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// Get profiles by ID\nexport const getProfileById = userId => async dispatch => {\n    dispatch({ type: CLEAR_PROFILE });\n\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n\n// Create or update profile\nexport const createProfile = (formData, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This can NOT be undone!'))\n\n    try {\n        await axios.delete(`/api/profile`);\n\n        dispatch({ type: CLEAR_PROFILE });\n        dispatch({ type: ACCOUNT_DELETED });\n\n        dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/utils/setAuthToken.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Success.js",["123","124","125","126"],"import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types';\n\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\nconst Success = props => {\n    return (\n        <Fragment>\n            <div id=\"home\" className=\"page-full\">\n                <h2 className=\"slogan\" style={{margin:'auto'}}>\n                    Congratulations! You successfully checked in...\n                </h2>\n\n                <p>\n\t\t            Did you know that you can create a QR Code of your very own? Yes! It's so easy just click below, enter a name, and start scanning.\n                </p>\n\n                <div className=\"button-container full medium\">\n                    <a href=\"/\" className=\"button\" target=\"_blank\">\n                        Create QR  Code\n                    </a>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nSuccess.propTypes = {\n\n}\n\nexport default Success\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Dashboard.js",["127","128","129"],"import React, { useEffect, useState, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getBoards } from '../actions/boardActions';\n\nimport AuthModal from '../components/modals/AuthModal';\nimport QrBoard from '../components/page_components/QrBoard';\nimport Spinner from '../components/common/Spinner';\n\nimport qrPNG from '../utils/imgs/frame.png';\n\nconst Dashboard = ({\n    auth: {\n        user, \n        isAuthenticated, \n        loading\n    },\n    board,\n    getBoards\n}) => {\n    // Nav underline Table\n    const [tableShow1, setTableShow1] = useState('all');\n\n    useEffect(() => {\n        if(user) {\n            getBoards();\n        }\n    }, [user]);\n\n    let boardList;\n\n    if(board.boards === null || board.loading) {\n        boardList = <Spinner />;\n    }\n    else {\n        if(board.boards.length > 0) {\n            boardList = board.boards.map(board => {\n                return (\n                    <QrBoard key={board._id} board={board} />\n                )\n            })\n        }\n        else {\n            // boardList = <Title name=\"No boards\" title=\"Available\" />\n            boardList = (\n                <div className=\"no-rides\">\n                    <h1>No QR Codes to display yet...</h1>\n                    <h2>Your QR Codes will display here</h2>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <Fragment>\n            <ul class=\"nav-underline store\">\n                <div onClick={e => setTableShow1('all')} className={tableShow1 === \"all\" && \"active\"}><li><i class=\"fas fa-list\"></i><p>All</p></li></div>\n                <div onClick={e => setTableShow1('active')} className={tableShow1 === \"active\" && \"active\"}><li><i class=\"far fa-play-circle\"></i><p>Active</p></li></div>\n                <div onClick={e => setTableShow1('paused')} className={tableShow1 === \"paused\" && \"active\"}><li><i class=\"far fa-pause-circle\"></i><p>Paused</p></li></div>\n            </ul>\n            <div className=\"qr-manage-content__items\">\n                {boardList}\n            </div>\n\n            {!loading && !isAuthenticated ? <AuthModal /> : null }\n        </Fragment>\n    )\n}\n\nDashboard.propTypes = {\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    board: PropTypes.object.isRequired,\n    getBoards: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile,\n    board: state.board\n});\n\nexport default connect(mapStateToProps, { getBoards })(withRouter(Dashboard));\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/TestQr.js",["130","131","132","133","134"],"import React, { Fragment, useEffect,  } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getBoardById } from '../actions/boardActions';\n\nimport YoutubeBlock from '../components/common/YoutubeBlock';\n\nimport qrPNG from '../utils/imgs/frame.png';\nimport frownPNG from '../utils/imgs/frown.png';\n\nconst TestQr = ({\n    getBoardById,\n    board: {\n        board,\n        loading\n    },\n    match,\n    auth\n}) => {\n\n    useEffect(() => {\n        getBoardById(match.params.id);\n    }, []);\n\n    return (\n        <Fragment>\n            <div className=\"page-full\">\n                <h2 className=\"slogan\" style={{margin:'40px auto 0'}}>\n                    Success! Your QR Code was created...\n                </h2>\n\n                <div className=\"qr-img-container\">\n                    <img className=\"qr-img\" src={board && board.url} />\n                </div>\n\n                <p>\n\t\t            Scan this QR code with your phone's camera app to see your QR code in action (or click it):\n                </p>\n\n\n                <div className=\"group design\">\n                    <div className=\"heading\">\n                        SAVE AND EDIT FOR LATER\n                    </div>\n                    <p>You can edit this QR Code attendee list at any time later with the URL in the address bar of this page. You can bookmark this page or copy the URL below to edit this QR Code later:</p>\n\n\n                    {!loading && board ? <input type=\"text\" value={'http://localhost:3000/' + board._id} style={{width:'calc(100% - 14px)'}} /> : null}\n\n                    <p>We can also send this URL to your email so you don't lose it:</p>\n\n                    <div className=\"input-container\">\n                        Your email:{' '}\n                        <input type=\"text\" className=\"email\" value=\"example@example.com\" style={{display:'inline-block', marginLeft:'10px', width:'200px'}} />\n                        <div className=\"button\">\n                            Send me an edit link\n                        </div>\n                    </div> \n                </div>\n                \n                {/* <div style={{display:'flex', justifyContent:'center'}}>\n                    <YoutubeBlock videoId='_nBlN9yp9R8' />\n                </div> */}\n\n                <a href=\"/\" className=\"qr_code_link action-save-changes\" target=\"_blank\">\n                    {/* <div className=\"qr_code\">\n                        <img className=\"qr_code_logo\" src=\"https://qrmenucreator.com/assets/11.png?2\" />\n                        <canvas width=\"1000\" height=\"1000\" style={{display:'none'}} />\n                        <img style={{display: 'block'}} src=\"https://lh3.googleusercontent.com/proxy/WfUMWqfw-3Mb2w9wPBhvFme--pGZJsjKPRsLxtSyMnqdckRlaNqAVZauN5att8-i9fsSYbonKzltSadFBO-EwPS9ZDREQTQ5wmj-xZqLg-ka0PcQun6xU_4e\" />\n                    </div> */}\n                </a>\n                <div className=\"button-container full medium\">\n                    <a href=\"/dashboard\" className=\"button\">\n                        View Dashboard\n                    </a>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nTestQr.propTypes = {\n    board: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    board: state.board,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getBoardById })(TestQr);\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/authActions.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/layout/Navbar/Navbar.js",["135","136","137"],"import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport qrLogo from '../../../utils/imgs/project_logo.png'\n\nconst Navbar = props => {\n    return (\n        <div className=\"nav-bar\">\n            <div className=\"logo\">\n                <img className=\"emoji\" src={qrLogo} />\n            </div>\n            <a href=\"/\" style={{marginLeft:'10px'}}>\n                <h1 className=\"name\">\n\t\t\t        Project QR\n                </h1>\n            </a>\n            <a href=\"/\" className=\"button\" style={{color:'#fff'}}>\n\t\t\t    Create QR Code\n            </a>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n\n}\n\nexport default Navbar\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Auth.js",["138","139","140","141","142"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getBoardById } from '../actions/boardActions';\n\nimport { addScan } from '../actions/boardActions';\nimport { login, register } from '../actions/authActions';\n\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nconst Auth = ({ \n    history,\n    match,\n    addScan,\n    login,\n    register,\n    getBoardById,\n    auth,\n    board: {\n        board,\n        loading\n    },\n}) => {\n    const [formSignUp, setFormSignUp] = useState(true);\n\n    const [formData, setFormData] = useState(initialState);\n\n    // Has user been added to attendee list\n    const [sentScan, setSentScan] = useState(false);\n\n    const [packageDeliv, setPackageDeliv] = useState(false);\n    const [pickupDeliv, setPickupDeliv] = useState(false);\n    const [shopping, setShopping] = useState(false);\n    const [sorting, setSorting] = useState(false);\n\n    const [roles, setRoles] = useState([]);\n\n    useEffect(() => {\n        getBoardById(match.params.id);\n    }, []);\n\n    const onAddRole = (value) => {\n        setRoles([...roles, value]);\n        // filterItems(value);\n    }\n\n    const onDeleteRole = (value) => {\n        let remainingTags = roles.filter ((r) => {\n        return (r !== value);\n        });\n        setRoles([...remainingTags]);\n        // unFilterItems(value);\n    }\n\n    const handleJobType = (value) => {\n        console.log('ROLES:')\n        console.log(value);\n        console.log(roles);\n        if(value === 'delivery' && !packageDeliv) {\n            setPackageDeliv(true);\n\n            onAddRole(value);\n        } else if (value === 'pickup' && !pickupDeliv) {\n            setPickupDeliv(true);\n\n            onAddRole(value);\n        } else if (value === 'shopping' && !shopping) {\n            setShopping(true);\n\n            onAddRole(value);\n        } else if (value === 'sorting' && !sorting) {\n            setSorting(true);\n\n            onAddRole(value);\n        } else {\n            onDeleteRole(value);\n\n            if(value === 'delivery') {\n                setPackageDeliv(false);\n            } else if (value === 'pickup') {\n                setPickupDeliv(false);\n            } else if (value === 'shopping') {\n                setShopping(false);\n            } else if (value === 'sorting') {\n                setSorting(false);\n            }\n        }\n    }\n\n    const { \n        name,\n        email,\n        password,\n     } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        if(auth.user === null) {\n            if(formSignUp) {\n                const first_name = name.split(' ').slice(0, -1).join(' ');\n                const last_name = name.split(' ').slice(-1).join(' ');\n    \n                console.log('FIRST NAME');\n                console.log(first_name)\n                console.log('LAST NAME');\n                console.log(last_name);\n    \n                register({ \n                    first_name, \n                    last_name, \n                    email, \n                    password, \n                    history \n                });\n            } else {\n                login(email, password);\n            }\n        }\n\n        setFormData(initialState);\n    }\n\n    if(!sentScan && auth.user && board) {\n        addScan(match.params.id, history)\n        setSentScan(true);\n    }\n\n    // if(isAuthenticated && !profile.loading && profile.profile) {\n    //     if(!profile.profile.registration_complete) {\n    //         history.push(`/account-setup`);\n    //     } else {\n    //         history.goBack();\n    //     }  \n    // }\n\n    return (\n        <main id=\"home\">\n            <div className=\"attendee-setup-container\">\n                <h2 className=\"slogan\" style={{margin:'auto'}}>\n                    My QR Code\n                </h2>\n                <section className=\"attendee-form\">\n                    <div style={{width:'100%'}} className=\"profile-settings-transition\">\n                        <div id=\"transition-1\" style={{width:'100%'}} className={formSignUp ? \"profile-settings-container active\" : \"profile-settings-container\"}>\n                            <form>\n                                <h4>Create an account to Check-In</h4>\n                                <fieldset>\n                                    <div className=\"row\" label=\"Full Name\">\n                                        <input \n                                            type=\"text\" \n                                            name=\"name\" \n                                            placeholder=\"Enter Full Name\" \n                                            value={name}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    <div className=\"row\" label=\"Email\">\n                                        <input \n                                            type=\"email\" \n                                            name=\"email\" \n                                            placeholder=\"Enter Email\" \n                                            value={email}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    <div className=\"row\" label=\"Password\">\n                                        <input \n                                            type=\"password\" \n                                            name=\"password\" \n                                            placeholder=\"Enter Password\" \n                                            value={password}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    {/* <div className=\"row select\" label=\"Gender\">\n                                        <select \n                                            name=\"gender\"\n                                            value={gender}\n                                            onChange={e => onChange(e)}\n                                        >\n                                            <option value=\"male\">Male</option>\n                                            <option value=\"female\">Female</option>\n                                        </select>\n                                    </div> */}\n                                </fieldset>\n                            </form>  \n                        </div>\n                        <div id=\"transition-2\" style={{width:'100%', justifyContent:'center'}} className={!formSignUp ? \"profile-settings-container active\" : \"profile-settings-container\"}>\n                            <form>\n                                <h4>Check-In</h4>\n                                <fieldset>\n                                    {/* <div className=\"row\" label=\"Full Name\">\n                                        <input \n                                            type=\"text\" \n                                            name=\"phone\" \n                                            placeholder=\"Enter Phone Number\" \n                                            value={phone}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div> */}\n                                    <div className=\"row\" label=\"Email\">\n                                        <input \n                                            type=\"email\" \n                                            name=\"email\" \n                                            placeholder=\"Enter Email\" \n                                            value={email}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    <div className=\"row\" label=\"Password\">\n                                        <input \n                                            type=\"password\" \n                                            name=\"password\" \n                                            placeholder=\"Enter Password\" \n                                            value={password}\n                                            onChange={e => onChange(e)}\n                                        />\n                                    </div>\n                                    {/* <div className=\"row\">\n                                        <div className=\"pilot-options\">\n                                            <label onClick={() => handleJobType('delivery')} className=\"pilot-option\">\n                                                {packageDeliv ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                style={{color:'#208cec'}}>Package Delivery Driver</span>\n                                            </label>\n                                            <label onClick={() => handleJobType('pickup')} className=\"pilot-option\">\n                                                {pickupDeliv ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                <span>Pick-up Delivery Driver</span>\n                                            </label>\n                                            <label onClick={() => handleJobType('shopping')} className=\"pilot-option\">\n                                                {shopping ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                <span>In-store Shopper</span>\n                                            </label>\n                                            <label onClick={() => handleJobType('sorting')} className=\"pilot-option\">\n                                                {sorting ? (\n                                                    <div style={{display:'flex', justifyContent:'center', alignItems:'center',height:'15px', width:'15px', border:'2px solid #ff4b2b', padding:'2px', borderRadius:'50%', marginRight:'10px'}}>\n                                                        <div style={{height:'100%', width:'100%', background:'#ff4b2b', borderRadius:'50%'}}></div>\n                                                    </div>\n                                                ) : (\n                                                    <div style={{height:'14px', width:'14px', border:'2px solid #cecece', borderRadius:'50%', marginRight:'10px'}}></div>\n                                                )}\n                                                <span>Sorting & Packaging</span>\n                                            </label>\n                                        </div>\n                                    </div> */}\n                                </fieldset>\n                            </form>\n                        </div>\n                    </div>\n                    <div style={{width:'80%'}} className=\"button-container full\">\n                        <div onClick={onSubmit} className=\"button\">\n                            Check-In\n                        </div>\n                    </div>\n                    {formSignUp ? <div className=\"link-text\" onClick={() => setFormSignUp(false)} style={{width: '100%', marginTop:'10px', cursor:'pointer', textAlign:'center'}}>Already have an account? <span style={{color:'#208cec'}}>Log In</span></div>\n                    : <div className=\"btn-secondary\" onClick={() => setFormSignUp(true)} style={{width: '100%', marginTop:'10px', cursor:'pointer', textAlign:'center'}}>Don't have an account? <span style={{color:'#208cec'}}>Register</span></div>}\n                    {/* <div className=\"disclaimer\">\n                        <p>\n                            We use Stripe to make sure you get paid on time and to keep your personal bank and details secure. Click \n                            {' '}<strong>Save and continue</strong>  to set up your payments on Stripe.\n                        </p>\n                    </div> */}\n                </section>\n            </div>\n        </main>\n    )\n}\n\nAuth.propTypes = {\n    addScan: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    board: PropTypes.object.isRequired,\n    getBoardById: PropTypes.func.isRequired,\n};\n  \nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    board: state.board\n});\n  \nexport default connect(mapStateToProps, { addScan, register, login, getBoardById})(withRouter(Auth));\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Landing.js",["143","144","145","146","147"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/pages/Detail.js",["148","149","150","151","152","153","154","155"],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/types.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/alertActions.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/actions/boardActions.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/Spinner.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/common/YoutubeBlock.js",["156"],"import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport YouTube from 'react-youtube';\n\n\nfunction YoutubeBlock(props) {\n        const opts = {\n          height: '169',\n          width: '300',\n          playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n          },\n        };\n\n        const videoOnReady = (event) => {\n            // access to player in all event handlers via event.target\n            event.target.pauseVideo();\n            console.log(event.target);\n        }\n        const {videoId} = props;\n        return (\n            <YouTube videoId={videoId} opts={opts} onReady={videoOnReady} />\n        );\n}\n\nYoutubeBlock.propTypes = {\n\n}\n\nexport default YoutubeBlock\n\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/modals/AuthModal.js",["157","158","159","160"],"import React, { useState, useEffect, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alertActions';\nimport { register, login } from '../../actions/authActions';\nimport Modal from 'react-responsive-modal';\nimport styled from 'styled-components';\n\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    signup: true\n};\n\nconst AuthModal = ({ setAlert, register, login, auth: { isAuthenticated, user }, history }) => {\n\n    const [displayModal, toggleModal] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n    const [formSignUp, setFormSignUp] = useState(true);\n\n    useEffect(() => {\n        if(!user) {\n            setFormData(initialState)\n        } else {\n            if(!user.signup) {\n                setFormSignUp(false)\n            }\n        };\n        if(!isAuthenticated) {\n            setTimeout(() => toggleModal(!displayModal),5000)\n        }\n    }, []);\n\n\n\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n        console.log(formData);\n\n        console.log(formData);\n    };\n\n    const { name, email, password } = formData;\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        const first_name = name.split(' ').slice(0, -1).join(' ');\n        const last_name = name.split(' ').slice(-1).join(' ');\n\n        console.log('FIRST NAME');\n        console.log(first_name)\n        console.log('LAST NAME');\n        console.log(last_name);\n\n        if(formSignUp) {\n            // const fullName = `${formData.firstname} ${formData.lastname}`\n            register({ \n                first_name, \n                last_name, \n                email, \n                password, \n                history \n            });\n        } else {\n            login(email, password);\n        }\n\n        setFormData(initialState);\n    }\n\n    const bg2 = {\n        modal: {\n            boxShadow: \"none\",\n            borderRadius: \"15px\",\n            border: \"1px solid rgb(214, 214, 214)\",\n            padding: \"0\"\n        },\n        overlay: {\n          background: \"rgba(20,20,20, .5)\"\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <ModalContainer>\n                <div id=\"modal\" className=\"col-10 mx-auto col-md-8 col-lg-6 text-center text-capitalize py-5\">\n                    <div className=\"form-container sign-up-container\" id=\"sign-up-container\">\n                        <form style={{display:'flex', flexDirection:'column', alignItems:'center', marginBottom: '2rem'}} id=\"auth-form\" onSubmit={onSubmit}>\n                            {formSignUp ? (\n                                <Fragment>\n                                    <h3>Create Account</h3>\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        className=\"input_line\"\n                                        placeholder=\"Enter Name\"\n                                        value={formData.name}\n                                        onChange={e => onChange(e)}\n                                        style={{margin:'10px 0', width:'100%', height:'50px'}}\n                                    />\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <h3>Log In</h3>\n                                </Fragment>\n                            )}\n                            <input\n                            type=\"email\"\n                            name=\"email\"\n                            className=\"input_line\"\n                            placeholder=\"Enter Email\"\n                            value={formData.email}\n                            onChange={e => onChange(e)}\n                            style={{margin:'10px 0', width:'100%', height:'50px'}}\n                            />\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                className=\"input_line\"\n                                placeholder=\"Enter Password\"\n                                value={formData.password}\n                                onChange={e => onChange(e)}\n                                style={{margin:'10px 0', width:'100%', height:'50px'}}\n                            />\n                            {/* <input\n                                type=\"password\"\n                                name=\"password2\"\n                                className=\"input_line\"\n                                placeholder=\"Confirm Password\"\n                                value={password2}\n                                onChange={e => onChange(e)}\n                                style={{margin:'10px 0', width:'100%', height:'50px'}}\n                            /> */}\n                            {formSignUp ? (\n                                <Fragment>\n                                    <button style={{width: '100%'}} type=\"submit\">Create An Account</button>\n                                    <div className=\"btn-secondary\" onClick={() => setFormSignUp(false)} style={{width: '100%'}}>Already have an account? <span>Log In</span></div>\n                                </Fragment>\n                            ): (\n                                <Fragment>\n                                    <button style={{width: '100%'}} type=\"submit\">Log In</button>\n                                    <div className=\"btn-secondary\" onClick={() => setFormSignUp(true)} style={{width: '100%'}}>Don't have an account? <span>Get Started</span></div>\n                                </Fragment>\n                            )}\n                            \n                            {/* <Link to=\"/login\" style={{color:'#808080', marginTop:'1rem'}}>Already have an account?</Link> */}\n                        </form>\n                    </div>\n                </div>\n            </ModalContainer>\n        </React.Fragment>\n    )\n}\n\nconst ModalContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.3);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 300;\n    #modal {\n        background: #fff;\n        @media (max-width: 768px){\n            margin-top: -7rem;\n        }\n    }\n`;\n\nAuthModal.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { setAlert, register, login })(withRouter(AuthModal));\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/components/page_components/QrBoard.js",["161","162","163","164","165"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { Link, withRouter } from 'react-router-dom';\n\nimport qrPNG from '../../utils/imgs/frame.png';\n\nconst QrBoard = ({ board }) => {\n    return (\n        <div className=\"qr-manage-code\">\n            <div className=\"qr-manage-code--row-first\">\n                <div className=\"qr-manage-code__type\">\n                    Website\n                </div>\n                <span className=\"qr-manage-code__type-icon icon\">\n                    <i class=\"fas fa-qrcode\"></i>\n                </span>\n                <div>\n                    <div className=\"qr-manage-code__title ng-binding qr-manage-code__title--editable\">\n                        {board && board.name}\n                    </div>\n                </div>\n                <div className=\"qr-manage-code--row-first--col-left\">\n                    <span className=\"qr-manage-code__folder-icon icon-qr-folder-outline\">\n                        <i class=\"fas fa-link\"></i>\n                    </span>\n                    <div className=\"qr-manage-code__folder\">\n                        <span className=\"qr-manage-code__folder-name\">\n                            <a className=\"qr-manage-code__url-link\">\n                                {board && `http://localhost:3000/${board._id}`}\n                            </a>\n                        </span>\n                    </div>\n                    <div className=\"qr-manage-code__date\">\n                        <span className=\"qr-manage-code__date-icon icon-business-time\">\n                            <i class=\"far fa-clock\"></i>\n                        </span>\n                        {board && moment(board.date).fromNow()}\n                    </div>\n                </div>\n                <div className=\"qr-manage-code--row-first--col-right\">\n                    <span className=\"qr-manage-code__status\">\n                        Paused\n                    </span>\n                </div>\n                <div className=\"qr-manage-code--row-second\">\n                    <div className=\"qr-manage-code--row-second--col-left\">\n                        <div className=\"qr-manage-code__stats\">\n                            <div className=\"qr-manage-code__scans\">\n                                {board && board.scan_num}\n                            </div>\n                            <div className=\"qr-manage-code__scans-label\">\n                                Scans\n                            </div>\n                            <Link className=\"qr-manage-code__insights\" to={\"/details/\" + board._id}>\n                                Details\n                                <span className=\"\">\n                                    <i class=\"fas fa-long-arrow-alt-right\"></i>\n                                </span>\n                            </Link>\n                        </div>\n                        <div className=\"qr-manage-code__qr\">\n                            <div className=\"qr-code-image\">\n                                <img className=\"qr-code-image__image\" src={board && board.url} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"qr-manage-code--row-second--col-right\">\n                        <div className=\"qr-manage-code__download\">\n                            <div className=\"qr-manage-download--new\">\n                                <div className=\"qr-manage-download\">\n                                    <button className=\"qr-manage-download__button\">\n                                        Activate\n                                    </button>\n                                </div>\n                                <div className=\"qr-manage-download__actions\">\n                                    <button className=\"qr-manage-download__actions-more\">\n                                        <span className=\"qr-manage-download__icon icon icon-menu-vertical\">\n                                            <i class=\"fas fa-ellipsis-v\"></i>\n                                        </span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nQrBoard.propTypes = {\n\n}\n\nexport default QrBoard\n","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/index.js",[],"/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/alertReducer.js",["166","167","168"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case 'SET_ALERT':\n            return [...state, payload];\n        case 'REMOVE_ALERT':\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/authReducer.js",["169"],"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, UPDATE_AUTH, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case UPDATE_AUTH:\n            return {\n                ...state,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/profileReducer.js",["170","171","172","173"],"import { GET_PROFILE, SET_SUBS, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                profile: null\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","/Users/tundeadepitan/Desktop/Projects/projectqrlanding/client/src/reducers/boardReducer.js",["174"],"import {\n    GET_BOARDS,\n    BOARD_ERROR,\n    DELETE_BOARD,\n    ADD_BOARD,\n    UPDATE_BOARD_LIST,\n    GET_BOARD,\n    EDIT_BOARD,\n    CLEAR_BOARDS\n  } from '../actions/types';\n  \n  const initialState = {\n    boards: [],\n    board: null,\n    loading: true,\n    error: {}\n  };\n  \n  export default function(state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case GET_BOARDS:\n        return {\n          ...state,\n          boards: payload,\n          loading: false\n        };\n      case GET_BOARD:\n        return {\n          ...state,\n          board: payload,\n          loading: false\n        };\n      case ADD_BOARD:\n        return {\n          ...state,\n          boards: [payload, ...state.boards],\n          board: payload,\n          loading: false\n        };\n      case EDIT_BOARD:\n        return {\n            ...state,\n            board: payload,\n            loading: false\n        };\n      case DELETE_BOARD:\n        return {\n          ...state,\n          boards: state.boards.filter(board => board._id !== payload),\n          loading: false\n        };\n      case BOARD_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      case UPDATE_BOARD_LIST:\n          let tempDetail = state.board;\n\n          if(tempDetail._id === action.payload.id) { \n              tempDetail = {...tempDetail, scan_list: action.payload.scan_list }\n          }\n\n          return {\n              ...state,\n              boards: state.boards.map(board =>\n                  board._id === action.payload.id ? { ...board, scan_list: action.payload.scan_list } : board\n              ),\n              board: tempDetail\n          };\n      case CLEAR_BOARDS:\n        return {\n            ...state,\n            boards: [],\n            loading: false\n        }\n      default:\n        return state;\n    }\n  }",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"183","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":50,"nodeType":"181","messageId":"182","endLine":2,"endColumn":54},{"ruleId":"179","severity":1,"message":"185","line":4,"column":38,"nodeType":"181","messageId":"182","endLine":4,"endColumn":52},{"ruleId":"179","severity":1,"message":"186","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"187","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":20},{"ruleId":"179","severity":1,"message":"188","line":6,"column":8,"nodeType":"181","messageId":"182","endLine":6,"endColumn":13},{"ruleId":"179","severity":1,"message":"189","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":16},{"ruleId":"179","severity":1,"message":"184","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"179","severity":1,"message":"188","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":30,"column":8,"nodeType":"192","endLine":30,"endColumn":14,"suggestions":"193"},{"ruleId":"179","severity":1,"message":"187","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":20},{"ruleId":"179","severity":1,"message":"188","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":13},{"ruleId":"179","severity":1,"message":"189","line":10,"column":8,"nodeType":"181","messageId":"182","endLine":10,"endColumn":16},{"ruleId":"190","severity":1,"message":"194","line":24,"column":8,"nodeType":"192","endLine":24,"endColumn":10,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":34,"column":21,"nodeType":"198","endLine":34,"endColumn":72},{"ruleId":"179","severity":1,"message":"186","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"184","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":11,"column":17,"nodeType":"198","endLine":11,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"184","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"199","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":24},{"ruleId":"190","severity":1,"message":"194","line":47,"column":8,"nodeType":"192","endLine":47,"endColumn":10,"suggestions":"200"},{"ruleId":"179","severity":1,"message":"201","line":62,"column":11,"nodeType":"181","messageId":"182","endLine":62,"endColumn":24},{"ruleId":"179","severity":1,"message":"202","line":1,"column":37,"nodeType":"181","messageId":"182","endLine":1,"endColumn":46},{"ruleId":"179","severity":1,"message":"184","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"187","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":20},{"ruleId":"179","severity":1,"message":"189","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":341,"column":21,"nodeType":"198","endLine":341,"endColumn":59},{"ruleId":"179","severity":1,"message":"187","line":8,"column":8,"nodeType":"181","messageId":"182","endLine":8,"endColumn":20},{"ruleId":"179","severity":1,"message":"188","line":11,"column":8,"nodeType":"181","messageId":"182","endLine":11,"endColumn":13},{"ruleId":"179","severity":1,"message":"189","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":16},{"ruleId":"179","severity":1,"message":"203","line":26,"column":24,"nodeType":"181","messageId":"182","endLine":26,"endColumn":37},{"ruleId":"179","severity":1,"message":"204","line":28,"column":12,"nodeType":"181","messageId":"182","endLine":28,"endColumn":24},{"ruleId":"179","severity":1,"message":"205","line":28,"column":26,"nodeType":"181","messageId":"182","endLine":28,"endColumn":41},{"ruleId":"190","severity":1,"message":"194","line":32,"column":8,"nodeType":"192","endLine":32,"endColumn":10,"suggestions":"206"},{"ruleId":"196","severity":1,"message":"197","line":317,"column":21,"nodeType":"198","endLine":317,"endColumn":72},{"ruleId":"179","severity":1,"message":"186","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"184","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"207","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":13},{"ruleId":"190","severity":1,"message":"208","line":35,"column":8,"nodeType":"192","endLine":35,"endColumn":10,"suggestions":"209"},{"ruleId":"179","severity":1,"message":"210","line":75,"column":11,"nodeType":"181","messageId":"182","endLine":75,"endColumn":14},{"ruleId":"179","severity":1,"message":"186","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"211","line":5,"column":16,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"188","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":30,"column":29,"nodeType":"198","endLine":30,"endColumn":69},{"ruleId":"196","severity":1,"message":"197","line":65,"column":33,"nodeType":"198","endLine":65,"endColumn":98},{"ruleId":"179","severity":1,"message":"214","line":1,"column":10,"nodeType":"181","messageId":"182","endLine":1,"endColumn":19},{"ruleId":"179","severity":1,"message":"215","line":1,"column":21,"nodeType":"181","messageId":"182","endLine":1,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":5,"column":1,"nodeType":"218","endLine":16,"endColumn":2},{"ruleId":"216","severity":1,"message":"217","line":10,"column":1,"nodeType":"218","endLine":49,"endColumn":2},{"ruleId":"179","severity":1,"message":"219","line":1,"column":23,"nodeType":"181","messageId":"182","endLine":1,"endColumn":31},{"ruleId":"179","severity":1,"message":"220","line":1,"column":79,"nodeType":"181","messageId":"182","endLine":1,"endColumn":91},{"ruleId":"179","severity":1,"message":"221","line":1,"column":93,"nodeType":"181","messageId":"182","endLine":1,"endColumn":102},{"ruleId":"216","severity":1,"message":"217","line":9,"column":1,"nodeType":"218","endLine":36,"endColumn":2},{"ruleId":"216","severity":1,"message":"217","line":19,"column":3,"nodeType":"218","endLine":83,"endColumn":4},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'UPDATE_PROFILE' is defined but never used.","'PropTypes' is defined but never used.","'YoutubeBlock' is defined but never used.","'qrPNG' is defined but never used.","'frownPNG' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBoards'. Either include it or remove the dependency array. If 'getBoards' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["224"],"React Hook useEffect has missing dependencies: 'getBoardById' and 'match.params.id'. Either include them or remove the dependency array. If 'getBoardById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["225"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.",["226"],"'handleJobType' is assigned a value but never used.","'useEffect' is defined but never used.","'setRenderList' is assigned a value but never used.","'attendeeList' is assigned a value but never used.","'setAttendeeList' is assigned a value but never used.",["227"],"'Modal' is defined but never used.","React Hook useEffect has missing dependencies: 'displayModal', 'isAuthenticated', and 'user'. Either include them or remove the dependency array. You can also do a functional update 'toggleModal(d => ...)' if you only need 'displayModal' in the 'toggleModal' call.",["228"],"'bg2' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'SET_ALERT' is defined but never used.","'REMOVE_ALERT' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'SET_SUBS' is defined but never used.","'GET_PROFILES' is defined but never used.","'GET_REPOS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"231","fix":"233"},{"desc":"231","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [getBoards, user]",{"range":"237","text":"238"},"Update the dependencies array to be: [getBoardById, match.params.id]",{"range":"239","text":"240"},{"range":"241","text":"240"},{"range":"242","text":"240"},"Update the dependencies array to be: [displayModal, isAuthenticated, user]",{"range":"243","text":"244"},[758,764],"[getBoards, user]",[527,529],"[getBoardById, match.params.id]",[1163,1165],[824,826],[1055,1057],"[displayModal, isAuthenticated, user]"]